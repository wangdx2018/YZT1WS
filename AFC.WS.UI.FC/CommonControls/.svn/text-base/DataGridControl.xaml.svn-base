<UserControl x:Class="AFC.WS.UI.CommonControls.DataGridControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:dg="http://schemas.microsoft.com/wpf/2008/toolkit"     
      Name="userControl"  
     Loaded="Window_Loaded" >
    
    <UserControl.Resources>
        <Storyboard  x:Key="Show" >
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:05.6000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Visibility)" Completed="ObjectAnimationUsingKeyFrames_Completed">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:05.6000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        
        <!-- Header related brushes -->
        <SolidColorBrush x:Key="HeaderBorderBrush" Color="#88B0E4"/>
        <SolidColorBrush x:Key="HeaderInnerBorderBrush" Color="#FFFFFF" />
        <LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
            <GradientStop Color="#FF98BFEB" Offset="0"/>
            <GradientStop Color="#FFB8D4F2" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HeaderHighlightedBackgoundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FFA3CBF7" Offset="0"/>
            <GradientStop Color="#FFD9E6F9" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HeaderPressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FFA3CBF7" Offset="1"/>
            <GradientStop Color="#FFD9E6F9" Offset="0"/>
        </LinearGradientBrush>
        <!-- Value converters -->
        <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />


        <!-- Animation for showing the Family Data control -->
        <Storyboard  x:Key="ShowGrid">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="dataGridDeviceInfo" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:10.6000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="dataGridDeviceInfo" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:10.6000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <!-- DataGridRowHeader Gripper -->
        <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Height" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeNS"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="SelectAllButtonTemplate" TargetType="{x:Type Button}">
            <Grid>
                <Rectangle x:Name="Border" SnapsToDevicePixels="True"
					   Stroke="{StaticResource HeaderBorderBrush}"
					   Fill="{StaticResource HeaderBackgroundBrush}" />
                <Border SnapsToDevicePixels="True" Margin="1,1,1,0"
					BorderBrush="White" BorderThickness="0,1,0,0"  />
            </Grid>
     

        </ControlTemplate>
        
        <Style x:Key="RowHeaderStyle"  TargetType="{x:Type dg:DataGridRowHeader}">
            <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dg:DataGridRowHeader}">
                        <Grid>
                            <dg:DataGridHeaderBorder 
							x:Name="headerBorder"
							IsSelected="{TemplateBinding IsRowSelected}"
							IsHovered ="{TemplateBinding IsMouseOver}"
							IsPressed="{TemplateBinding IsPressed}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="1,0,1,1"
							Padding ="{TemplateBinding Padding}"
							Orientation="Horizontal"
							SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
							SeparatorBrush="{TemplateBinding SeparatorBrush}">
                                <Border BorderBrush="{StaticResource HeaderInnerBorderBrush}"
									BorderThickness="0,1,0,0">
                                    <StackPanel Orientation="Horizontal">
                                        <ContentPresenter
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										VerticalAlignment="Center"/>
                                        <Control
										SnapsToDevicePixels="false"
										Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type dg:DataGridRow}}, Path=(Validation.HasError), Converter={StaticResource bool2VisibilityConverter}}"
										Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type dg:DataGridRow}}, Path=ValidationErrorTemplate}" />
                                    </StackPanel>
                                </Border>
                            </dg:DataGridHeaderBorder>
                            <!--Left Column Header Corner -->
                            <Button       
						Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type dg:DataGrid}}, Path=CellsPanelHorizontalOffset}"
						Focusable="false"
						Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type dg:DataGrid}}, Path=HeadersVisibility, Converter={x:Static dg:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static dg:DataGridHeadersVisibility.All}}" 
						Template="{StaticResource SelectAllButtonTemplate}"/>
                            <Thumb x:Name="PART_TopHeaderGripper"
							   VerticalAlignment="Top"
							   Style="{StaticResource RowHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_BottomHeaderGripper"
							   VerticalAlignment="Bottom"
							   Style="{StaticResource RowHeaderGripperStyle}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="headerBorder" Property="Background" 
									Value="{StaticResource HeaderHighlightedBackgoundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="headerBorder" Property="Background" 
									Value="{StaticResource HeaderPressedBackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
   
    <Grid Name="grid" >
        
        <dg:DataGrid  Name="dataGridDeviceInfo" 
                      SelectionMode="Extended"  
                      GridLinesVisibility="All" 
                      RowHeaderStyle="{DynamicResource RowHeaderStyle}"
                      RowStyle="{DynamicResource dataGridRow}"
                      SelectionUnit="FullRow"
                      RowDetailsVisibilityMode="VisibleWhenSelected" 
                      SelectedCellsChanged="dataGrid_SelectedCellsChanged"
                      AutoGenerateColumns="True"  
                      AllowDrop="False"
                      >

        </dg:DataGrid>
        <Grid x:Name="SearchingControlHost"  Panel.ZIndex="100"/>
    </Grid>
    
</UserControl>

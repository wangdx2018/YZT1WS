<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006" 
                    xmlns:vsm="clr-namespace:System.Windows;assembly=WPFToolkit" 
                 
	                mc:Ignorable="d"
                    xmlns:dg="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit"
                    xmlns:dgp="clr-namespace:Microsoft.Windows.Controls.Primitives;assembly=WPFToolkit"
                    xmlns:dx="clr-namespace:AFC.WS.UI.CommonControls;assembly=AFC.WS.UI.FC"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">

    <!--added by wangdx 菜单选中颜色-->
    <SolidColorBrush x:Key="MenuSelected" Color="Red" />
    <!-- NormalBrush is used as the Background for SimpleButton, SimpleRepeatButton -->
    <LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#EEE" Offset="0.0" />
        <GradientStop Color="#CCC" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="alarmInfo" Color="Red" />
    <!-- LightBrush is used for content areas such as Menu, Tab Control background -->
    <LinearGradientBrush x:Key="LightBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF" Offset="0.0" />
        <GradientStop Color="#EEE" Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedBorderBrush" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="#FF8B8B8B" />
        <GradientStop Color="#FFADADAD" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" Offset="0.046" />
        <GradientStop Color="#FFD7E0EA" Offset="0.194" />
        <GradientStop Color="#FFBCC5D5" Offset="0.507" />
        <GradientStop Color="#FFA4ADBB" Offset="0.521" />
        <GradientStop Color="#FFBAC1CF" Offset="0.811" />
        <GradientStop Color="#FFE3E4E6" Offset="0.982" />
    </LinearGradientBrush>
    <!-- PressedBrush is used for Pressed in Button, Radio Button, CheckBox -->
    <LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFB3C1D4" Offset="0" />
        <GradientStop Color="#FF8A9AA9" Offset="1" />
        <GradientStop Color="#FFC1D1E5" Offset="0.465" />
        <GradientStop Color="#FF91A2B2" Offset="0.485" />
        <GradientStop Color="#FFC0D0E4" Offset="0.48" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#444" Offset="0.0" />
        <GradientStop Color="#888" Offset="1.0" />
    </LinearGradientBrush>

    <!-- Disabled Brushes are used for the Disabled look of each control -->
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <!-- DefaultedBorderBrush is used to show KeyBoardFocus -->
    <LinearGradientBrush x:Key="DefaultedBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#777" Offset="0.0" />
        <GradientStop Color="#000" Offset="1.0" />
    </LinearGradientBrush>

    <!-- Style and Template pairs are used to define each control Part -->
    <!-- The Style provides default values on the control; the Template gives the elements for each control -->

    <LinearGradientBrush x:Key="SelectedListBoxBrush" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#33F7F7F7" Offset="0" />
        <GradientStop Color="#00FFFFFF" Offset="0.98" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

    <!-- This is the thickness setting for most borders -->
    <Thickness x:Key="BorderThickness">1,1,1,1</Thickness>

    <!-- Padding value for labels -->
    <Thickness x:Key="LabelPadding">5,8,5,2</Thickness>

    <!-- SolidColorBrushes, LinearGradientBrushes, and DrawingBrushes-->

    <!-- The Background Brush is used as the background for the Main Window -->
    <LinearGradientBrush x:Key="MainBackgroundBrush" StartPoint="0.102759,-0.0431519" EndPoint="0.802759,0.913967">
        <GradientStop Color="#FF555555" Offset="0" />
        <GradientStop Color="#FF1C1C1C" Offset="1" />
    </LinearGradientBrush>

    <!-- The Background Brush is used as the background for the Headers and Footers -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="#FF202020" />

    <!-- The Panel Gradient Brush is used as the background for the panels such as the Details Panel -->
    <LinearGradientBrush x:Key="PanelGradientBrush" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#FF555555" Offset="0" />
        <GradientStop Color="#FF1C1C1C" Offset="1" />
    </LinearGradientBrush>

    <!-- The Diagram Gradient Brush is used as the background for the Diagram area-->
    <LinearGradientBrush x:Key="DiagramGradientBrush" EndPoint="0.439,0.967" StartPoint="0.561,0.033">
        <GradientStop Color="#FF202020" Offset="0" />
        <GradientStop Color="#FF545454" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="PersonInfoBackgroundBrush" Color="#FF282828" />

    <SolidColorBrush x:Key="PhotosBackgroundBrush" Color="#FF000000" />

    <!-- Colors used for the Welcome Header -->
    <SolidColorBrush x:Key="WelcomeBackgroundBrush" Color="#FF202020" />
    <SolidColorBrush x:Key="WelcomeHeaderFontColor" Color="#FFE6E6E6" />

    <!-- This is a color setting for text -->
    <SolidColorBrush x:Key="FontColor" Color="#FFE6E6E6" />

    <SolidColorBrush x:Key="HeaderFontColor" Color="#FFE6E6E6" />

    <SolidColorBrush x:Key="InputFontColor" Color="#FFE6E6E6" />

    <SolidColorBrush x:Key="GridHeaderFontColor" Color="#FF888888" />

    <SolidColorBrush x:Key="AlternateFontColor" Color="#FF888888" />

    <SolidColorBrush x:Key="SharedBirthdaysGroupHeaderColor" Color="#FFAAAAAA" />

    <!-- The Border Brush is used as the color for most borders -->
    <SolidColorBrush x:Key="BorderBrush" Color="#FF747474" />
    <!-- The Border Brush is used as the color for most borders -->
    <SolidColorBrush x:Key="BorderBrush1" Color="#FFFFFFFF" />
    <!-- The Input Background Brush is used as the background for Input areas -->
    <LinearGradientBrush x:Key="InputBackgroundBrush" EndPoint="0.504,0.351" StartPoint="0.504,-0.319">
        <GradientStop Color="#FF000000" Offset="0.416" />
        <GradientStop Color="#FF4A5790" Offset="0.54" />
    </LinearGradientBrush>

    <DrawingBrush x:Key="PersonFigureFill" Stretch="Uniform">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="F1 M 6.53515625,4.4921875 C 6.53515625,2.01171875 8.546875,0 11.029296875,0 C 13.509765625,0 15.521484375,2.01171875 15.521484375,4.4921875 C 15.521484375,6.974609375 13.509765625,8.986328125 11.029296875,8.986328125 C 8.546875,8.986328125 6.53515625,6.974609375 6.53515625,4.4921875 Z" Brush="#FFFFFFFF" />
                <GeometryDrawing Geometry="F1 M 12.05078125,25.939453125 C 12.05078125,25.939453125 12.05078125,40.1640625 12.05078125,41.490234375 C 12.05078125,42.818359375 13.990234375,43.533203125 14.806640625,43.533203125 C 15.625,43.533203125 17.0546875,43.431640625 17.0546875,41.6953125 C 17.0546875,39.958984375 17.0546875,15.521484375 17.0546875,15.521484375 C 17.0546875,15.521484375 18.5859375,15.521484375 18.5859375,15.521484375 C 18.5859375,15.521484375 18.5859375,23.693359375 18.5859375,24.91796875 C 18.5859375,26.14453125 19.810546875,26.451171875 20.525390625,26.451171875 C 21.240234375,26.451171875 22.466796875,26.349609375 22.466796875,25.123046875 C 22.466796875,23.8984375 22.16015625,16.236328125 22.16015625,14.1953125 C 22.16015625,12.15234375 20.73046875,9.498046875 17.2578125,9.498046875 C 17.2578125,9.498046875 5.20703125,9.498046875 5.20703125,9.498046875 C 1.736328125,9.498046875 0.306640625,12.15234375 0.306640625,14.1953125 C 0.306640625,16.236328125 0,23.8984375 0,25.123046875 C 0,26.349609375 1.224609375,26.451171875 1.939453125,26.451171875 C 2.654296875,26.451171875 3.880859375,26.14453125 3.880859375,24.91796875 C 3.880859375,23.693359375 3.880859375,15.521484375 3.880859375,15.521484375 C 3.880859375,15.521484375 5.412109375,15.521484375 5.412109375,15.521484375 C 5.412109375,15.521484375 5.412109375,39.958984375 5.412109375,41.6953125 C 5.412109375,43.431640625 6.841796875,43.533203125 7.658203125,43.533203125 C 8.4765625,43.533203125 10.416015625,42.818359375 10.416015625,41.490234375 C 10.416015625,40.1640625 10.416015625,25.939453125 10.416015625,25.939453125 C 10.416015625,25.939453125 12.05078125,25.939453125 12.05078125,25.939453125 Z" Brush="#FFFFFFFF" />
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <SolidColorBrush x:Key="LogoBrush" Color="#FF93999C" />

    <!-- Vertigo Logo -->
    <DrawingBrush x:Key="OGITREV">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 728.667,269.665L 728.928,269.665L 740.899,203.05L 757.12,203.05L 737.042,299.05L 720.555,299.05L 700.48,203.05L 716.698,203.05L 728.667,269.665 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 646.54,299.05L 646.54,284.691L 676.058,284.691L 676.058,256.503L 654.784,256.503L 654.784,242.142L 676.058,242.142L 676.058,217.41L 648.402,217.41L 648.402,203.05L 692.545,203.05L 692.545,299.05L 646.54,299.05 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 619.862,259.696C 616.938,259.696 613.477,259.561 611.35,259.295L 599.652,299.05L 582.896,299.05L 596.855,255.576C 591.277,253.048 585.292,246.795 585.292,231.371C 585.292,210.897 594.732,203.05 613.214,203.05L 636.35,203.05L 636.35,299.05L 619.862,299.05L 619.862,259.696 Z M 619.862,216.613L 614.008,216.613C 605.102,216.613 601.777,219.936 601.777,231.371C 601.777,242.806 605.102,246.134 614.008,246.134L 619.862,246.134L 619.862,216.613 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 563.93,299.05L 547.441,299.05L 547.441,217.41L 531.487,217.41L 531.487,203.05L 579.889,203.05L 579.889,217.41L 563.93,217.41L 563.93,299.05 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 505.876,299.05L 505.876,203.05L 522.362,203.05L 522.362,299.05L 505.876,299.05 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 465.766,263.415L 458.055,263.415L 458.055,272.722C 458.055,282.298 460.448,286.019 467.1,286.019C 472.813,286.019 474.808,282.03 474.808,275.915L 474.808,226.584C 474.808,218.477 471.48,216.082 467.495,216.082C 460.982,216.082 458.055,219.806 458.055,234.165L 442.362,234.165L 442.362,228.05C 442.362,213.686 450.61,201.722 467.1,201.722C 483.323,201.722 491.297,212.759 491.297,226.321L 491.297,275.78C 491.297,291.071 482.256,300.384 469.227,300.384C 461.511,300.384 457.521,297.717 452.605,291.868L 449.545,299.05L 441.568,299.05L 441.568,250.384L 465.766,250.384L 465.766,263.415 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 429.646,275.78C 429.646,289.342 421.672,300.384 404.386,300.384C 387.1,300.384 379.12,289.342 379.12,275.78L 379.12,226.321C 379.12,212.759 387.1,201.722 404.386,201.722C 421.672,201.722 429.646,212.759 429.646,226.321L 429.646,275.78 Z M 413.162,226.717C 413.162,219.535 411.034,216.082 404.386,216.082C 397.74,216.082 395.612,219.535 395.612,226.717L 395.612,275.384C 395.612,282.561 397.74,286.019 404.386,286.019C 411.034,286.019 413.162,282.561 413.162,275.384L 413.162,226.717 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 773.188,203.05L 773.188,204.571L 771.18,204.571L 771.18,212.05L 769.462,212.05L 769.462,204.571L 767.454,204.571L 767.454,203.05L 773.188,203.05 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 774.501,212.05L 774.501,203.05L 776.907,203.05L 778.464,208.959L 778.49,208.959L 780.047,203.05L 782.454,203.05L 782.454,212.05L 780.982,212.05L 780.982,204.97L 780.959,204.97L 779.126,212.05L 777.829,212.05L 775.995,204.97L 775.969,204.97L 775.969,212.05L 774.501,212.05 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 114.616,240.705C 114.616,241.054 114.605,241.359 114.583,241.62C 114.561,241.882 114.523,242.11 114.469,242.306C 114.415,242.502 114.344,242.676 114.258,242.828C 114.171,242.981 114.019,243.166 113.803,243.382C 113.585,243.598 113.13,243.929 112.436,244.373C 111.742,244.817 110.881,245.25 109.851,245.671C 108.821,246.094 107.639,246.451 106.305,246.744C 104.972,247.035 103.514,247.182 101.931,247.182C 99.1985,247.182 96.7317,246.726 94.5311,245.815C 92.3299,244.903 90.4543,243.558 88.9042,241.778C 87.3534,239.998 86.1607,237.801 85.3261,235.186C 84.4914,232.571 84.0741,229.559 84.0741,226.152C 84.0741,222.658 84.5239,219.544 85.4237,216.809C 86.3234,214.075 87.5858,211.758 89.2121,209.859C 90.8385,207.96 92.7843,206.511 95.0501,205.513C 97.3157,204.514 99.8247,204.015 102.579,204.015C 103.793,204.015 104.974,204.129 106.124,204.356C 107.273,204.584 108.335,204.87 109.31,205.216C 110.286,205.562 111.153,205.962 111.912,206.416C 112.671,206.871 113.196,207.244 113.49,207.535C 113.782,207.828 113.972,208.05 114.058,208.203C 114.145,208.355 114.215,208.535 114.27,208.742C 114.324,208.949 114.368,209.194 114.4,209.477C 114.433,209.761 114.449,210.098 114.449,210.49C 114.449,210.926 114.427,211.296 114.383,211.601C 114.34,211.906 114.275,212.162 114.187,212.369C 114.1,212.576 113.997,212.729 113.877,212.826C 113.757,212.925 113.61,212.974 113.435,212.974C 113.13,212.974 112.705,212.761 112.16,212.337C 111.615,211.912 110.912,211.444 110.051,210.932C 109.19,210.42 108.144,209.952 106.912,209.528C 105.68,209.103 104.204,208.89 102.482,208.89C 100.607,208.89 98.9003,209.264 97.3638,210.013C 95.8274,210.762 94.5135,211.864 93.4237,213.317C 92.3339,214.772 91.4889,216.546 90.8898,218.64C 90.2902,220.734 89.9907,223.126 89.9907,225.817C 89.9907,228.486 90.2791,230.847 90.8573,232.897C 91.4347,234.948 92.2629,236.663 93.3423,238.041C 94.4218,239.419 95.7459,240.46 97.3157,241.166C 98.8853,241.871 100.662,242.224 102.646,242.224C 104.325,242.224 105.791,242.018 107.045,241.606C 108.299,241.194 109.367,240.733 110.25,240.224C 111.133,239.714 111.858,239.253 112.425,238.841C 112.991,238.43 113.439,238.224 113.766,238.224C 113.918,238.224 114.049,238.257 114.158,238.322C 114.267,238.387 114.354,238.513 114.419,238.697C 114.484,238.882 114.534,239.138 114.566,239.465C 114.599,239.792 114.616,240.205 114.616,240.705 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 153.456,245.808C 153.456,245.981 153.423,246.133 153.358,246.263C 153.293,246.393 153.152,246.502 152.935,246.588C 152.717,246.675 152.414,246.74 152.023,246.783C 151.633,246.826 151.112,246.848 150.461,246.848C 149.896,246.848 149.435,246.826 149.077,246.783C 148.719,246.74 148.432,246.669 148.215,246.572C 147.997,246.475 147.829,246.339 147.71,246.166C 147.59,245.992 147.488,245.776 147.401,245.515L 143.527,235.597C 143.072,234.47 142.599,233.434 142.111,232.492C 141.622,231.549 141.042,230.736 140.368,230.053C 139.695,229.37 138.902,228.839 137.99,228.459C 137.078,228.08 135.982,227.89 134.7,227.89L 130.954,227.89L 130.954,245.808C 130.954,245.981 130.906,246.133 130.808,246.263C 130.71,246.393 130.559,246.497 130.353,246.572C 130.148,246.647 129.866,246.712 129.51,246.767C 129.153,246.821 128.704,246.848 128.163,246.848C 127.621,246.848 127.172,246.821 126.815,246.767C 126.458,246.712 126.171,246.647 125.955,246.572C 125.739,246.496 125.587,246.393 125.501,246.263C 125.414,246.132 125.371,245.981 125.371,245.806L 125.371,206.794C 125.371,205.948 125.593,205.357 126.038,205.02C 126.483,204.684 126.955,204.515 127.454,204.515L 136.405,204.515C 137.468,204.515 138.352,204.542 139.058,204.597C 139.763,204.651 140.398,204.711 140.962,204.776C 142.589,205.059 144.027,205.504 145.275,206.112C 146.522,206.721 147.569,207.492 148.415,208.427C 149.262,209.362 149.896,210.432 150.32,211.638C 150.743,212.843 150.954,214.175 150.954,215.63C 150.954,217.043 150.764,218.309 150.384,219.428C 150.004,220.547 149.456,221.536 148.74,222.394C 148.023,223.252 147.165,223.996 146.166,224.626C 145.167,225.257 144.049,225.789 142.811,226.224C 143.505,226.528 144.135,226.912 144.699,227.378C 145.263,227.845 145.79,228.403 146.278,229.054C 146.766,229.705 147.227,230.453 147.661,231.298C 148.095,232.145 148.529,233.098 148.963,234.161L 152.74,243.432C 153.043,244.214 153.238,244.761 153.325,245.076C 153.412,245.39 153.456,245.634 153.456,245.808 Z M 145.038,216.212C 145.038,214.561 144.668,213.165 143.929,212.024C 143.19,210.884 141.951,210.064 140.213,209.564C 139.669,209.412 139.055,209.303 138.371,209.238C 137.686,209.173 136.79,209.14 135.682,209.14L 130.954,209.14L 130.954,223.348L 136.431,223.348C 137.909,223.348 139.185,223.169 140.262,222.811C 141.337,222.453 142.234,221.953 142.951,221.312C 143.668,220.671 144.195,219.916 144.532,219.047C 144.869,218.179 145.038,217.233 145.038,216.212 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 188.361,244.323C 188.361,244.715 188.338,245.058 188.295,245.351C 188.252,245.645 188.176,245.89 188.067,246.086C 187.958,246.281 187.833,246.423 187.693,246.51C 187.551,246.597 187.394,246.64 187.22,246.64L 166.988,246.64C 166.488,246.64 166.016,246.472 165.57,246.136C 165.125,245.8 164.902,245.208 164.902,244.362L 164.902,206.794C 164.902,205.947 165.125,205.356 165.57,205.02C 166.016,204.684 166.488,204.515 166.988,204.515L 187.002,204.515C 187.176,204.515 187.333,204.559 187.474,204.646C 187.616,204.733 187.73,204.875 187.817,205.07C 187.904,205.266 187.974,205.511 188.029,205.804C 188.083,206.098 188.111,206.462 188.111,206.897C 188.111,207.289 188.083,207.632 188.029,207.925C 187.974,208.22 187.904,208.458 187.816,208.643C 187.729,208.828 187.615,208.964 187.474,209.052C 187.333,209.139 187.175,209.182 187.001,209.182L 170.486,209.182L 170.486,222.39L 184.628,222.39C 184.801,222.39 184.959,222.44 185.1,222.537C 185.241,222.636 185.361,222.772 185.458,222.946C 185.556,223.121 185.627,223.36 185.67,223.665C 185.713,223.97 185.736,224.329 185.736,224.742C 185.736,225.135 185.713,225.473 185.67,225.756C 185.627,226.039 185.556,226.268 185.458,226.442C 185.361,226.617 185.241,226.742 185.1,226.818C 184.959,226.894 184.801,226.932 184.628,226.932L 170.486,226.932L 170.486,241.974L 187.219,241.974C 187.392,241.974 187.55,242.017 187.692,242.104C 187.833,242.192 187.958,242.327 188.067,242.512C 188.176,242.697 188.252,242.936 188.295,243.23C 188.338,243.524 188.361,243.888 188.361,244.323 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 231.63,244.663C 231.803,245.141 231.896,245.527 231.907,245.82C 231.917,246.115 231.836,246.337 231.663,246.49C 231.489,246.642 231.201,246.739 230.8,246.783C 230.398,246.826 229.861,246.848 229.189,246.848C 228.516,246.848 227.978,246.832 227.577,246.8C 227.176,246.767 226.872,246.712 226.666,246.637C 226.46,246.561 226.308,246.457 226.21,246.326C 226.112,246.196 226.02,246.033 225.934,245.837L 222.32,235.557L 204.807,235.557L 201.357,245.707C 201.292,245.903 201.204,246.071 201.096,246.212C 200.988,246.354 200.83,246.474 200.624,246.572C 200.418,246.669 200.125,246.74 199.745,246.783C 199.365,246.826 198.872,246.848 198.264,246.848C 197.635,246.848 197.119,246.821 196.718,246.767C 196.316,246.712 196.034,246.61 195.872,246.457C 195.709,246.305 195.633,246.082 195.644,245.788C 195.654,245.494 195.747,245.108 195.92,244.63L 210.048,205.478C 210.135,205.24 210.249,205.044 210.39,204.893C 210.53,204.741 210.737,204.622 211.008,204.535C 211.279,204.448 211.627,204.388 212.05,204.356C 212.473,204.323 213.01,204.307 213.661,204.307C 214.355,204.307 214.931,204.323 215.387,204.356C 215.842,204.388 216.211,204.448 216.493,204.535C 216.775,204.622 216.992,204.746 217.144,204.909C 217.296,205.072 217.415,205.272 217.502,205.511L 231.63,244.663 Z M 213.499,210.098L 213.466,210.098L 206.207,231.098L 220.855,231.098L 213.499,210.098 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 263.187,206.923C 263.187,207.335 263.165,207.693 263.122,207.996C 263.079,208.3 263.008,208.544 262.911,208.729C 262.813,208.913 262.693,209.048 262.553,209.135C 262.411,209.222 262.254,209.265 262.081,209.265L 250.229,209.265L 250.229,245.806C 250.229,245.98 250.185,246.132 250.099,246.263C 250.012,246.393 249.861,246.496 249.644,246.572C 249.428,246.647 249.141,246.712 248.784,246.767C 248.428,246.821 247.978,246.848 247.437,246.848C 246.918,246.848 246.474,246.821 246.106,246.767C 245.738,246.712 245.446,246.647 245.23,246.572C 245.014,246.496 244.862,246.393 244.775,246.263C 244.689,246.132 244.646,245.98 244.646,245.806L 244.646,209.265L 232.794,209.265C 232.62,209.265 232.463,209.222 232.322,209.135C 232.181,209.048 232.067,208.913 231.98,208.729C 231.893,208.544 231.823,208.3 231.769,207.996C 231.714,207.693 231.687,207.335 231.687,206.923C 231.687,206.511 231.714,206.147 231.769,205.833C 231.823,205.518 231.893,205.264 231.98,205.069C 232.067,204.873 232.181,204.733 232.322,204.645C 232.463,204.559 232.62,204.515 232.794,204.515L 262.081,204.515C 262.254,204.515 262.411,204.559 262.553,204.645C 262.693,204.733 262.813,204.873 262.911,205.069C 263.008,205.264 263.079,205.518 263.122,205.833C 263.165,206.147 263.187,206.511 263.187,206.923 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 296.049,244.323C 296.049,244.715 296.027,245.058 295.984,245.351C 295.941,245.645 295.864,245.89 295.756,246.086C 295.647,246.281 295.522,246.423 295.381,246.51C 295.24,246.597 295.083,246.64 294.909,246.64L 274.676,246.64C 274.176,246.64 273.704,246.472 273.259,246.136C 272.814,245.8 272.591,245.208 272.591,244.362L 272.591,206.794C 272.591,205.947 272.814,205.356 273.259,205.02C 273.704,204.684 274.177,204.515 274.677,204.515L 294.691,204.515C 294.864,204.515 295.022,204.559 295.163,204.646C 295.305,204.733 295.418,204.875 295.506,205.07C 295.593,205.266 295.663,205.511 295.718,205.804C 295.772,206.098 295.799,206.462 295.799,206.897C 295.799,207.289 295.772,207.632 295.717,207.925C 295.663,208.22 295.592,208.458 295.505,208.643C 295.418,208.828 295.304,208.964 295.163,209.052C 295.021,209.139 294.864,209.182 294.689,209.182L 278.174,209.182L 278.174,222.39L 292.316,222.39C 292.49,222.39 292.648,222.44 292.789,222.537C 292.93,222.636 293.049,222.772 293.147,222.946C 293.245,223.121 293.316,223.36 293.359,223.665C 293.402,223.97 293.424,224.329 293.424,224.742C 293.424,225.135 293.402,225.473 293.359,225.756C 293.316,226.039 293.245,226.268 293.147,226.442C 293.049,226.617 292.93,226.742 292.789,226.818C 292.648,226.894 292.49,226.932 292.316,226.932L 278.174,226.932L 278.174,241.974L 294.907,241.974C 295.081,241.974 295.239,242.017 295.381,242.104C 295.522,242.192 295.647,242.327 295.756,242.512C 295.864,242.697 295.941,242.936 295.984,243.23C 296.027,243.524 296.049,243.888 296.049,244.323 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 340.851,224.959C 340.851,228.605 340.385,231.79 339.452,234.514C 338.519,237.238 337.158,239.495 335.369,241.285C 333.579,243.076 331.383,244.416 328.78,245.306C 326.177,246.196 323.075,246.64 319.474,246.64L 310.559,246.64C 310.06,246.64 309.588,246.472 309.143,246.136C 308.698,245.8 308.476,245.208 308.476,244.362L 308.476,206.794C 308.476,205.947 308.698,205.356 309.143,205.02C 309.588,204.684 310.06,204.515 310.559,204.515L 320.092,204.515C 323.736,204.515 326.816,204.987 329.333,205.931C 331.849,206.875 333.958,208.232 335.661,210.001C 337.364,211.77 338.655,213.913 339.534,216.43C 340.412,218.947 340.851,221.791 340.851,224.959 Z M 334.976,225.183C 334.976,222.906 334.694,220.787 334.129,218.825C 333.564,216.863 332.68,215.166 331.474,213.735C 330.268,212.304 328.743,211.188 326.896,210.386C 325.05,209.584 322.672,209.182 319.762,209.182L 314.06,209.182L 314.06,241.932L 319.827,241.932C 322.519,241.932 324.79,241.596 326.636,240.924C 328.482,240.252 330.024,239.222 331.262,237.834C 332.501,236.447 333.429,234.707 334.048,232.614C 334.667,230.522 334.976,228.045 334.976,225.183 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 307.014,287.902C 307.014,289.225 306.846,290.445 306.51,291.562C 306.174,292.679 305.702,293.683 305.095,294.571C 304.488,295.462 303.756,296.243 302.899,296.915C 302.042,297.587 301.077,298.152 300.003,298.608C 298.93,299.063 297.78,299.404 296.555,299.631C 295.33,299.86 293.926,299.974 292.342,299.974L 281.346,299.974C 280.848,299.974 280.376,299.806 279.931,299.47C 279.486,299.134 279.264,298.541 279.264,297.695L 279.264,260.127C 279.264,259.281 279.486,258.69 279.931,258.352C 280.376,258.016 280.848,257.848 281.346,257.848L 290.911,257.848C 293.427,257.848 295.487,258.087 297.092,258.566C 298.697,259.042 300.036,259.738 301.11,260.649C 302.184,261.562 302.991,262.68 303.534,264.005C 304.076,265.329 304.348,266.826 304.348,268.498C 304.348,269.498 304.228,270.454 303.99,271.365C 303.751,272.277 303.398,273.118 302.932,273.889C 302.466,274.66 301.88,275.35 301.176,275.958C 300.471,276.566 299.663,277.066 298.752,277.457C 299.901,277.673 300.974,278.069 301.972,278.644C 302.969,279.22 303.842,279.951 304.59,280.839C 305.338,281.73 305.93,282.772 306.363,283.964C 306.797,285.157 307.014,286.47 307.014,287.902 Z M 298.598,269.044C 298.598,268.022 298.457,267.098 298.176,266.272C 297.894,265.446 297.452,264.744 296.846,264.168C 296.241,263.592 295.451,263.152 294.478,262.847C 293.506,262.542 292.219,262.39 290.62,262.39L 284.848,262.39L 284.848,276.057L 291.204,276.057C 292.652,276.057 293.819,275.867 294.706,275.485C 295.592,275.105 296.327,274.595 296.911,273.954C 297.495,273.312 297.922,272.562 298.192,271.703C 298.462,270.845 298.598,269.958 298.598,269.044 Z M 301.139,288.225C 301.139,286.967 300.939,285.862 300.539,284.907C 300.139,283.953 299.555,283.151 298.786,282.5C 298.018,281.85 297.055,281.355 295.898,281.019C 294.74,280.683 293.286,280.515 291.533,280.515L 284.848,280.515L 284.848,295.348L 292.961,295.348C 294.237,295.348 295.351,295.196 296.303,294.894C 297.255,294.589 298.094,294.139 298.819,293.542C 299.544,292.946 300.111,292.204 300.523,291.316C 300.934,290.425 301.139,289.397 301.139,288.225 Z " />
                <GeometryDrawing Brush="{StaticResource LogoBrush}" Geometry="F1 M 330.422,283.602L 330.422,299.139C 330.422,299.313 330.378,299.466 330.292,299.596C 330.206,299.726 330.055,299.829 329.84,299.904C 329.626,299.98 329.335,300.045 328.969,300.1C 328.603,300.154 328.163,300.182 327.646,300.182C 327.108,300.182 326.661,300.154 326.306,300.1C 325.952,300.045 325.661,299.98 325.435,299.904C 325.21,299.829 325.053,299.726 324.967,299.596C 324.881,299.466 324.838,299.313 324.838,299.139L 324.838,283.602L 312.924,259.822C 312.685,259.324 312.539,258.933 312.485,258.649C 312.43,258.368 312.485,258.152 312.648,257.998C 312.81,257.847 313.103,257.748 313.527,257.705C 313.95,257.662 314.519,257.64 315.236,257.64C 315.887,257.64 316.413,257.662 316.814,257.705C 317.215,257.748 317.536,257.808 317.775,257.884C 318.013,257.96 318.192,258.069 318.312,258.21C 318.431,258.352 318.545,258.531 318.654,258.748L 324.48,270.865C 325.02,272.016 325.559,273.222 326.097,274.48C 326.635,275.74 327.184,277.011 327.743,278.292L 327.808,278.292C 328.303,277.054 328.813,275.821 329.34,274.595C 329.868,273.368 330.402,272.157 330.943,270.963L 336.802,258.78C 336.867,258.563 336.959,258.378 337.079,258.227C 337.198,258.074 337.361,257.96 337.567,257.884C 337.773,257.808 338.06,257.748 338.43,257.705C 338.798,257.662 339.265,257.64 339.829,257.64C 340.611,257.64 341.223,257.668 341.668,257.722C 342.113,257.777 342.422,257.878 342.596,258.032C 342.769,258.183 342.829,258.401 342.775,258.683C 342.721,258.966 342.574,259.345 342.336,259.822L 330.422,283.602 Z " />
                <GeometryDrawing Geometry="F1 M 357.454,202.515L 357.454,299.208">
                    <GeometryDrawing.Pen>
                        <Pen Thickness="1.33333" MiterLimit="2.75" Brush="{StaticResource LogoBrush}" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <!-- This brush is used when the person does not have a primary photo -->
    <DrawingBrush x:Key="NoPhotoBrush">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M 126.889,143.333L 250.889,143.333L 250.889,267.333L 126.889,267.333L 126.889,143.333 Z ">
                    <GeometryDrawing.Brush>
                        <LinearGradientBrush StartPoint="0,0.0215053" EndPoint="1,1">
                            <GradientStop Color="#FFFFFFFF" Offset="0.00847458" />
                            <GradientStop Color="#FF949063" Offset="0.800847" />
                        </LinearGradientBrush>
                    </GeometryDrawing.Brush>
                </GeometryDrawing>
                <GeometryDrawing Brush="#FF85825F" Geometry="F1 M 162.428,200.167C 162.428,184.671 175.003,172.085 190.509,172.085C 206.005,172.085 218.591,184.671 218.591,200.167C 218.591,215.683 206.005,228.249 190.509,228.249C 175.003,228.249 162.428,215.683 162.428,200.167 Z " />
                <GeometryDrawing Brush="#FF524F40" Geometry="F1 M 160.598,199.025C 160.598,183.529 173.174,170.943 188.68,170.943C 204.176,170.943 216.762,183.529 216.762,199.025C 216.762,214.541 204.176,227.107 188.68,227.107C 173.174,227.107 160.598,214.541 160.598,199.025 Z " />
                <GeometryDrawing Brush="#FF6D6B51" Geometry="F1 M 253.277,270.359C 250.065,261.438 253.089,268.956 244.895,249.789C 242.347,243.406 234.03,235.753 223.176,235.753L 163.176,235.753C 152.342,235.753 144.025,243.406 141.488,249.789C 138.94,256.153 135.803,261.438 132.631,270.359" />
                <GeometryDrawing Brush="#FF524F40" Geometry="F1 M 249.41,266.847C 246.198,257.926 249.222,265.444 241.028,246.278C 238.48,239.894 230.163,232.241 219.309,232.241L 159.309,232.241C 148.475,232.241 140.158,239.894 137.621,246.278C 135.074,252.641 131.936,257.926 128.764,266.847" />
                <GeometryDrawing Brush="#FFFFFFFF" Geometry="M 115.999,132.639L 260.777,132.639L 260.777,301.028L 115.999,301.028L 115.999,132.639 Z M 126.208,142.884L 250.208,142.884L 250.208,266.884L 126.208,266.884L 126.208,142.884 Z ">
                    <GeometryDrawing.Pen>
                        <Pen LineJoin="Round" Brush="#FFC0C1C3" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <!-- MenuPressedBrush - This brush is used for the Main Menu pressed and focused state-->
    <LinearGradientBrush x:Key="MenuPressedBrush" StartPoint="0.500023,0.999996" EndPoint="0.500023,4.37507e-006">
        <GradientStop Color="#FF875225" Offset="0" />
        <GradientStop Color="#FF221E1F" Offset="0.960674" />
        <GradientStop Color="#FF221E1F" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="PopupMenuBackgroundBrush" Color="#FF000000" />

    <LinearGradientBrush x:Key="MenuIsHighlightedBrush" StartPoint="0.5,0.999996" EndPoint="0.5,4.37507e-006">
        <GradientStop Color="#FF4C4D4F" Offset="0" />
        <GradientStop Color="#FF4C4D4F" Offset="0.0280899" />
        <GradientStop Color="#FF221E1F" Offset="0.775281" />
        <GradientStop Color="#FF221E1F" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ListViewFontColor" Color="#FFFA6E15" />

    <!-- ButtonBorderBrush is used as the Border for buttons  -->
    <LinearGradientBrush x:Key="ButtonBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#CCC" Offset="0.0" />
        <GradientStop Color="#444" Offset="1.0" />
    </LinearGradientBrush>

    <!-- MenuBorderBrush is used as the Border for MenuItems -->
    <LinearGradientBrush x:Key="MenuBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#CCC" Offset="0.0" />
        <GradientStop Color="#444" Offset="1.0" />
    </LinearGradientBrush>

    <!-- Disabled Brushes are used for the Disabled look of each control -->

    <SolidColorBrush x:Key="DisabledMenuForegroundBrush" Color="#888" />


    <!-- This BitmapEffect is used by the Simple MenuItem -->
    <DropShadowBitmapEffect x:Key="PopupDropShadow" ShadowDepth="1.5" Softness="0.15" />


    <!-- Histogram Brushes -->
    <SolidColorBrush x:Key="CategoryFillBrush" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="CategoryStrokeBrush" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="AxisBrush" Color="#FF979797" />

    <!-- Family Data Brushes -->
    <SolidColorBrush x:Key="FamilyDataFontColor" Color="#FFFFFFFF" />

    <SolidColorBrush x:Key="FamilyEditListViewSelectedBrush" Color="#FFF16422" />

    <SolidColorBrush x:Key="TextBlockForegroundBrush" Color="#FFFA6E15" />

    <LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0.499999,0.00908135" EndPoint="0.499999,1.17275">
        <GradientStop Color="#D43B4A87" Offset="0" />
        <GradientStop Color="#D43B4A87" Offset="0.0236486" />
        <GradientStop Color="#D409242A" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SelectedHeaderBackgroundBrush" StartPoint="0.499999,0.00908135" EndPoint="0.499999,1.17275">
        <GradientStop Color="#D44F5E8E" Offset="0" />
        <GradientStop Color="#D44F5E8E" Offset="0.0236486" />
        <GradientStop Color="#D44B5378" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FF979797" />

    <SolidColorBrush x:Key="FamilyDataGridHeaderFontColor" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="FamilyDataGridSelectedHeaderFontColor" Color="#FFFFFFFF" />

    <SolidColorBrush x:Key="StatisticsControlBackgroundBrush" Color="#33FFFFFF" />

    <SolidColorBrush x:Key="StatisticsHeaderBackgroundBrush" Color="#004B536D" />
    <SolidColorBrush x:Key="StatisticsHeaderBorderBrush" Color="#FFAAAAAA" />

    <SolidColorBrush x:Key="FlowDocumentFontColor" Color="#FFFFFF" />

    <!-- Control Resources-->

    <!-- This is the style for most borders -->
    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="CornerRadius" Value="10,10,10,10" />
    </Style>



    <!-- This is the default style for all labels -->
    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Padding" Value="{DynamicResource LabelPadding}" />
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <!-- This is the default style for all labels -->
    <Style TargetType="{x:Type dx:LabelExtend}">
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Padding" Value="{DynamicResource LabelPadding}" />
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
        <Setter Property="FontSize" Value="9pt" />
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Padding" Value="{DynamicResource LabelPadding}" />
    </Style>

    <!-- This is the default style for all labels -->
    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Padding" Value="{DynamicResource LabelPadding}" />
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <!-- This is the default style for all textblocks -->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Calibri" />
    </Style>

    <!-- This is the default style for all radio buttons -->
    <!--<Style TargetType="{x:Type RadioButton}">-->
    <!--<Setter Property="Foreground" Value="White" />-->
    <!--</Style>-->
    <!-- This is the default style for all radio buttons -->
    <!--<Style  TargetType="{x:Type dx:RiadioButtonExtend}">-->
    <!--<Setter Property="Foreground" Value="White" />-->
    <!--</Style>-->
    <!-- This is the default style for all radio buttons -->
    <!--<Style  TargetType="{x:Type CheckBox}">-->
    <!--<Setter Property="Foreground" Value="White" />-->
    <!--</Style>-->
    <!-- This is the default style for all radio buttons -->
    <!--<Style  TargetType="{x:Type dx:CheckBoxExtend}">-->
    <!--<Setter Property="Foreground" Value="White" />-->
    <!--</Style>-->
    <!-- This is the style for the avatar textblock text -->
    <Style x:Key="AvatarTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
    </Style>


    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="GridViewColumnHeader.Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="2,0,0,2" Text="{TemplateBinding GridViewColumnHeader.Content}" TextAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource GridHeaderFontColor}" />
        </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NameGridViewColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="GridViewColumnHeader.Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="4,0,0,2" Text="{TemplateBinding GridViewColumnHeader.Content}" TextAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource GridHeaderFontColor}" />
        </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="groundBrush" StartPoint="0.102759,-0.0431519" EndPoint="0.802759,0.913967">
        <GradientStop Color="#FFA8EBEC" Offset="0" />
        <GradientStop Color="#FFF28050" Offset="1" />
    </LinearGradientBrush>

    <Style x:Key="HeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
        <Setter Property="Margin" Value="10,0,10,10" />
    </Style>

    <Style x:Key="SectionHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <Style x:Key="DetailsBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="10,10,10,10" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Margin" Value="10,10,10,0" />
        <Setter Property="Padding" Value="5,5,5,5" />
        <Setter Property="Background" Value="#FF262626" />
    </Style>

    <Style x:Key="NormalButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="20" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Rectangle" Stroke="#FF051F42" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.501,0.039" StartPoint="0.501,0.971">
                                    <GradientStop Color="#FF1F317D" Offset="0.101" />
                                    <GradientStop Color="#FF1F317D" Offset="0.49" />
                                    <GradientStop Color="#FF6C8EBD" Offset="0.51" />
                                    <GradientStop Color="#FF283D8C" Offset="0" />
                                    <GradientStop Color="#FF7094C7" Offset="0.986" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.501,0.039" StartPoint="0.501,0.971">
                                        <GradientStop Color="#FF2C558C" Offset="0.101" />
                                        <GradientStop Color="#FF1F317D" Offset="0.49" />
                                        <GradientStop Color="#FF9DB5D7" Offset="0.51" />
                                        <GradientStop Color="#FF244AAF" Offset="0" />
                                        <GradientStop Color="#FF87A4D9" Offset="0.986" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BlackButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NormalButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Stroke="#FF000000" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.501,0.039" StartPoint="0.501,0.971">
                                    <GradientStop Color="#FF1E1E1E" Offset="0.101" />
                                    <GradientStop Color="#FF1E1E1E" Offset="0.49" />
                                    <GradientStop Color="#FF5B5959" Offset="0.51" />
                                    <GradientStop Color="#FF2F2F2F" Offset="0" />
                                    <GradientStop Color="#FF5B5959" Offset="0.986" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.501,0.039" StartPoint="0.501,0.971">
                                        <GradientStop Color="#FF3A3A3A" Offset="0.101" />
                                        <GradientStop Color="#FF1E1E1E" Offset="0.49" />
                                        <GradientStop Color="#FFB0B0B0" Offset="0.51" />
                                        <GradientStop Color="#FF656565" Offset="0" />
                                        <GradientStop Color="#FF989898" Offset="0.938" />
                                        <GradientStop Color="#FF7F7F7F" Offset="0.986" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BigButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BlackButtonStyle}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type ButtonBase}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseEnter" d:StoryboardName="MouseEnter">
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)" Storyboard.TargetName="Grid" To="2" Duration="0:0:.2" />
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)" Storyboard.TargetName="Grid" To="2" Duration="0:0:.2" />
                        </Storyboard>
                        <Storyboard x:Key="MouseLeave" d:StoryboardName="MouseLeave">
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)" Storyboard.TargetName="Grid" To="1" Duration="0:0:1" />
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)" Storyboard.TargetName="Grid" To="1" Duration="0:0:1" />
                        </Storyboard>
                        <!--<Storyboard x:Key="MouseDown" d:StoryboardName="MouseDown">
                            <DoubleAnimation Duration="0:0:1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(RotateTransform.Angle)" Storyboard.TargetName="Grid" To="45"/>
                        </Storyboard>
                        <Storyboard x:Key="MouseUp" d:StoryboardName="MouseUp">
                            <DoubleAnimation Duration="0:0:1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(RotateTransform.Angle)" Storyboard.TargetName="Grid" To="0"/>
                        </Storyboard>-->
                    </ControlTemplate.Resources>
                    <Grid Width="220" Height="30" x:Name="Grid" RenderTransformOrigin="0.5,0.5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform X="0" Y="0"/>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Rectangle Stroke="#FF000000" RadiusX="7.5" RadiusY="7.5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" Width="Auto" Height="Auto" x:Name="Rectangle" RenderTransformOrigin="0.5,0.5" Opacity="0.62208853925651786">
                            <Rectangle.Fill>
                                <LinearGradientBrush SpreadMethod="Pad" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="sc#1, 1, 1, 1"/>
                                            <GradientStop Offset="1" Color="sc#1, 0, 0, 0"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <TranslateTransform X="-0.5" Y="-0.5"/>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="-180.98520721661379"/>
                                            <TranslateTransform X="0.5" Y="0.5"/>
                                            <TranslateTransform X="1.6653345369377348E-16" Y="0"/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                            <Rectangle.OpacityMask>
                                <LinearGradientBrush SpreadMethod="Pad" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#FFFFFFFF"/>
                                            <GradientStop Offset="1" Color="sc#0.607801139, 0.38132602, 0.479320168, 0.6239604"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" x:Name="ContentPresenter" RenderTransformOrigin="0.5,0.5" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="Grid">
                            <BeginStoryboard Storyboard="{StaticResource MouseEnter}" x:Name="MouseEnter_BeginStoryboard"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="Grid">
                            <BeginStoryboard Storyboard="{StaticResource MouseLeave}" x:Name="MouseLeave_BeginStoryboard"/>
                        </EventTrigger>
                        <!--<EventTrigger RoutedEvent="Mouse.MouseDown" SourceName="Grid">
                            <BeginStoryboard Storyboard="{StaticResource MouseDown}" x:Name="MouseDown_BeginStoryboard" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseUp" SourceName="Grid">
                            <BeginStoryboard Storyboard="{StaticResource MouseUp}" x:Name="MouseUp_BeginStoryboard" />
                        </EventTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RedButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NormalButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.501,0.039" StartPoint="0.501,0.971">
                                    <GradientStop Color="#FF860E0E" Offset="0.101" />
                                    <GradientStop Color="#FF9C0F0F" Offset="0.49" />
                                    <GradientStop Color="#FFD17575" Offset="0.51" />
                                    <GradientStop Color="#FFA41313" Offset="0" />
                                    <GradientStop Color="#FFD57777" Offset="0.986" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.501,0.039" StartPoint="0.501,0.971">
                                        <GradientStop Color="#FF882119" Offset="0.234" />
                                        <GradientStop Color="#FFC78A81" Offset="0.879" />
                                        <GradientStop Color="#FF440D09" Offset="0.004" />
                                        <GradientStop Color="#FFC78A81" Offset="0.986" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.501,0.039" StartPoint="0.501,0.971">
                                        <GradientStop Color="#FF9E4E4E" Offset="0.101" />
                                        <GradientStop Color="#FF9C0F0F" Offset="0.49" />
                                        <GradientStop Color="#FFE79C9C" Offset="0.51" />
                                        <GradientStop Color="#FF656565" Offset="0" />
                                        <GradientStop Color="#FFE57E7E" Offset="0.986" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.501,0.039" StartPoint="0.501,0.971">
                                        <GradientStop Color="#AA9E4E4E" Offset="0.101" />
                                        <GradientStop Color="#FFBBF0FC" Offset="0.49" />
                                        <GradientStop Color="#FF76EEEA" Offset="0.51" />
                                        <GradientStop Color="#FF656565" Offset="0" />
                                        <GradientStop Color="#FFE57E7E" Offset="0.986" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--This sets the default style for all buttons-->
    <Style TargetType="{x:Type Button}"  BasedOn="{StaticResource RedButtonStyle}" />

    <!-- Repeat Button Style - This is used by ScrollBar for the up and down buttons -->
    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Thumb Style - The Thumb is the draggable part of the Scrollbar -->
    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0,0,0,0" x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="2" RadiusY="2" Fill="#FF414C6F" Stroke="#FFFFFFFF" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True" />
                        <Trigger Property="IsEnabled" Value="False" />
                        <Trigger Property="IsDragging" Value="True" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollRepeatButton Style - This RepeatButton is used above and below the Thumb in the Scrollbar. They are set to transparent si that they do not show over the scrollbar -->
    <Style x:Key="ScrollRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar  This makes use of Thumb, RepeatButton and ScrollRepeatButton -->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="18" />
                        </Grid.RowDefinitions>

                        <RepeatButton x:Name="DecreaseRepeat" Style="{DynamicResource RepeatButtonStyle}" Command="ScrollBar.LineUpCommand" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0,0,0,0">
                            <Grid>
                                <Path x:Name="DecreaseArrow" StrokeThickness="1" Data="M 0 4 L 8 4 L 4 0 Z" RenderTransformOrigin="0.5,0.5" Stroke="#FFFFFFFF" Margin="0.75,0,-0.757,0" />
                            </Grid>
                        </RepeatButton>

                        <!-- Track is a special layout container which sizes the thumb and the repeat button which do jump scrolling either side of it -->
                        <Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ThumbStyle}" Width="10" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Style="{DynamicResource ScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Style="{DynamicResource ScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                        </Track>

                        <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Style="{DynamicResource RepeatButtonStyle}" Command="ScrollBar.LineDownCommand" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0,0,0,0">
                            <Grid>
                                <Path x:Name="IncreaseArrow" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z" RenderTransformOrigin="0.5,0.5" Stroke="#FFFFFFFF" Margin="0.75,0,-0.757,0" />
                            </Grid>
                        </RepeatButton>
                    </Grid>

                    <!-- This uses a single template for ScrollBar and rotate it to be Horizontal
					It also changes the commands so that the it does Left and Right instead of Up and Down Commands -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">

                            <!-- Rotate the ScrollBar from Vertical to Horizontal -->
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>

                            <!-- Track is bound to Orientation internally, so we need to rotate it back to Vertical -->
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical" />

                            <!-- Change the commands to do Horizontal commands -->
                            <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown" />
                            <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- User for styling the foreground color, applied to all MenuItems  -->

    <!-- Main Menu - This template uses a StackPanel to layout MenuItems -->
    <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MenuBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Grid>
                        <Border Margin="1" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Horizontal" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="specialBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFE8EBEC" Offset="0.0" />
        <GradientStop Color="#FF800050" Offset="1.0" />
    </LinearGradientBrush>
    <!-- This is a color setting for text -->
    <SolidColorBrush x:Key="FontColor1" Color="Black" />

    <!-- MenuItem - The template uses triggers to provide four different arrangements of menu item which are set via the Role property -->
    <Style  TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="{DynamicResource specialBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource FontColor1}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Margin="0,0,10,0">
                        <Grid>

                            <!-- The Grid is used to hold together columns for an Content and Arrow to show the next level
							 Size sharing is used in Grid so that the Icon, Content, Arrow for each MenuItem align together -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="14" />
                            </Grid.ColumnDefinitions>

                            <!-- Content for the menu text etc -->
                            <ContentPresenter Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" />

                            <!-- Arrow drawn path which points to the next level of the menu -->
                            <Grid Grid.Column="1" Margin="0,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" Data="M-1.0089707E-11,0.0050000012 L8.03125,-3.5155176E-24 3.9995833,4.095 z" Height="4.095" />
                            </Grid>

                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" VerticalOffset="0" PopupAnimation="Slide">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder" Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1" />
                                    <!-- StackPanel holds children of the menu. This is set bu IsItemsHost=True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Grid>
                            </Popup>

                        </Grid>
                    </Border>

                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>

                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup" />
                        </Trigger>

                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                        </Trigger>

                        <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                        </Trigger>

                        <!-- Role = SubMenuItem : this is a child menu item which has children-->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                        </Trigger>

                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                            <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu" />
                            <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu" />
                            <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder" />
                        </Trigger>

                        <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource MenuIsHighlightedBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF000000" />
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource MenuPressedBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource MenuPressedBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledMenuForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Converter Resources -->

    <!--<local:PrimaryAvatarConverter x:Key="PrimaryAvatarConverter" />-->

    <!-- Converter for formatting dates to short date format -->
    <!--<local:DateFormattingConverter x:Key="DateFormattingConverter" />-->

    <!-- Converter for avatar -->
    <!--<local:ComposingConverter x:Key="ComposingConverter">
    <local:ComposingConverter.Converters>
      <local:NotConverter />
      <local:BoolToVisibilityConverter />
    </local:ComposingConverter.Converters>
  </local:ComposingConverter>-->

    <!-- Data Tempaltes-->
    <!-- This is the style for the photo in the list of photos on the PersonInfo control -->
    <!--<DataTemplate DataType="{x:Type Microsoft.FamilyShowLib:Photo}">
    <Grid>
      <Border VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2" DockPanel.Dock="Top">
        <Image Source="{Binding FullyQualifiedPath}" Stretch="UniformToFill" MaxHeight="65" MaxWidth="65" MinHeight="65" MinWidth="65" />
      </Border>
      <TextBlock Text="{Binding IsAvatar, Converter={StaticResource PrimaryAvatarConverter}}" DockPanel.Dock="Bottom" Foreground="#FF000000" HorizontalAlignment="Right" Margin="0,-10,5,0" VerticalAlignment="Top" FontSize="36" FontWeight="Bold" />
    </Grid>
  </DataTemplate>-->

    <!-- TagsList ItemTemplate-->
    <DataTemplate x:Key="TagsItemTemplate">
        <TextBlock Text="{Binding}" Foreground="{StaticResource FontColor}" />
  </DataTemplate>

    <!-- Diagram Resources-->

    <!-- Pens used to draw connector lines -->
    <Pen x:Key="ChildConnectionPen" Brush="#80808080" Thickness="1" />
    <Pen x:Key="MarriedConnectionPen" Brush="#ff90c090" Thickness="2" />
    <Pen x:Key="FormerConnectionPen" Brush="#ff90c090" Thickness="2" DashStyle="{x:Static DashStyles.Dash}" />

    <!-- Text used to draw connector text (marriage date) -->
    <Color x:Key="ConnectionTextColor">#ffffffff</Color>
    <FontFamily x:Key="ConnectionTextFont">Calibri</FontFamily>
    <System:Double x:Key="ConnectionTextSize">12</System:Double>

    <!-- Node colors -->
    <Color x:Key="PrimaryColor">#fff06423</Color>
    <Color x:Key="PrimaryStarColor">#ff3952a3</Color>
    <Color x:Key="PrimaryHoverColor">#ffff8443</Color>
    <Color x:Key="RelatedColor">#fff06423</Color>
    <Color x:Key="RelatedHoverColor">#ffff8443</Color>
    <Color x:Key="SpouseColor">#ff6797c8</Color>
    <Color x:Key="SpouseHoverColor">#ff87b7e8</Color>
    <Color x:Key="SiblingColor">#fff09822</Color>
    <Color x:Key="SiblingHoverColor">#ffffb842</Color>
    <Color x:Key="SiblingLeftColor">#ff6797c8</Color>
    <Color x:Key="SiblingLeftHoverColor">#ff87b7e8</Color>
    <Color x:Key="SiblingRightColor">#fff09822</Color>
    <Color x:Key="SiblingRightHoverColor">#ffffb842</Color>

    <SolidColorBrush x:Key="PrimaryStarBrush" Color="{DynamicResource PrimaryStarColor}" />

    <!-- Female primary brushes -->
    <SolidColorBrush x:Key="FemalePrimaryLivingFill" Color="{DynamicResource PrimaryColor}" />
    <SolidColorBrush x:Key="FemalePrimaryLivingHoverFill" Color="{DynamicResource PrimaryHoverColor}" />
    <SolidColorBrush x:Key="FemalePrimaryDeceasedStroke" Color="{DynamicResource PrimaryColor}" />
    <SolidColorBrush x:Key="FemalePrimaryDeceasedHoverFill" Color="{DynamicResource PrimaryHoverColor}" Opacity="0.50" />

    <!-- Female related brushes -->
    <SolidColorBrush x:Key="FemaleRelatedLivingFill" Color="{DynamicResource RelatedColor}" />
    <SolidColorBrush x:Key="FemaleRelatedLivingHoverFill" Color="{DynamicResource RelatedHoverColor}" />
    <SolidColorBrush x:Key="FemaleRelatedDeceasedStroke" Color="{DynamicResource RelatedColor}" />
    <SolidColorBrush x:Key="FemaleRelatedDeceasedHoverFill" Color="{DynamicResource RelatedHoverColor}" Opacity="0.50" />

    <!-- Female spouse brushes -->
    <SolidColorBrush x:Key="FemaleSpouseLivingFill" Color="{DynamicResource SpouseColor}" />
    <SolidColorBrush x:Key="FemaleSpouseLivingHoverFill" Color="{DynamicResource SpouseHoverColor}" />
    <SolidColorBrush x:Key="FemaleSpouseDeceasedStroke" Color="{DynamicResource SpouseColor}" />
    <SolidColorBrush x:Key="FemaleSpouseDeceasedHoverFill" Color="{DynamicResource SpouseHoverColor}" Opacity="0.50" />

    <!-- Female sibling brushes -->
    <SolidColorBrush x:Key="FemaleSiblingLivingFill" Color="{DynamicResource SiblingColor}" />
    <SolidColorBrush x:Key="FemaleSiblingLivingHoverFill" Color="{DynamicResource SiblingHoverColor}" />
    <SolidColorBrush x:Key="FemaleSiblingDeceasedStroke" Color="{DynamicResource SiblingColor}" />
    <SolidColorBrush x:Key="FemaleSiblingDeceasedHoverFill" Color="{DynamicResource SiblingHoverColor}" Opacity="0.50" />

    <!-- Female sibling left brushes -->
    <LinearGradientBrush x:Key="FemaleSiblingLeftLivingFill" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#ff6797c8" Offset="0.019" />
        <GradientStop Color="#fff09822" Offset="0.51" />
        <GradientStop Color="#ff6797c8" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="FemaleSiblingLeftLivingHoverFill" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#ff87b7e8" Offset="0.019" />
        <GradientStop Color="#ffffb842" Offset="0.51" />
        <GradientStop Color="#ff87b7e8" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="FemaleSiblingLeftDeceasedStroke" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#ff6797c8" Offset="0.486" />
        <GradientStop Color="#fff09822" Offset="0.514" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="FemaleSiblingLeftDeceasedHoverFill" EndPoint="1,0.5" StartPoint="0,0.5" Opacity="0.50">
        <GradientStop Color="#ff87b7e8" Offset="0.019" />
        <GradientStop Color="#ffffb842" Offset="0.51" />
        <GradientStop Color="#ff87b7e8" Offset="0.5" />
    </LinearGradientBrush>

    <!-- Female sibling right brushes -->
    <LinearGradientBrush x:Key="FemaleSiblingRightLivingFill" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#fff09822" Offset="0.019" />
        <GradientStop Color="#ff6797c8" Offset="0.51" />
        <GradientStop Color="#fff09822" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="FemaleSiblingRightLivingHoverFill" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#ffffb842" Offset="0.019" />
        <GradientStop Color="#ff87b7e8" Offset="0.51" />
        <GradientStop Color="#ffffb842" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="FemaleSiblingRightDeceasedStroke" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#fff09822" Offset="0.486" />
        <GradientStop Color="#ff6797c8" Offset="0.514" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="FemaleSiblingRightDeceasedHoverFill" EndPoint="1,0.5" StartPoint="0,0.5" Opacity="0.50">
        <GradientStop Color="#ffffb842" Offset="0.019" />
        <GradientStop Color="#ff87b7e8" Offset="0.51" />
        <GradientStop Color="#ffffb842" Offset="0.5" />
    </LinearGradientBrush>

    <!-- Male primary brushes -->
    <SolidColorBrush x:Key="MalePrimaryLivingFill" Color="{DynamicResource RelatedColor}" />
    <SolidColorBrush x:Key="MalePrimaryLivingHoverFill" Color="{DynamicResource RelatedHoverColor}" />
    <SolidColorBrush x:Key="MalePrimaryDeceasedStroke" Color="{DynamicResource RelatedColor}" />
    <SolidColorBrush x:Key="MalePrimaryDeceasedHoverFill" Color="{DynamicResource RelatedHoverColor}" Opacity="0.50" />

    <!-- Male related brushes -->
    <SolidColorBrush x:Key="MaleRelatedLivingFill" Color="{DynamicResource RelatedColor}" />
    <SolidColorBrush x:Key="MaleRelatedLivingHoverFill" Color="{DynamicResource RelatedHoverColor}" />
    <SolidColorBrush x:Key="MaleRelatedDeceasedStroke" Color="{DynamicResource RelatedColor}" />
    <SolidColorBrush x:Key="MaleRelatedDeceasedHoverFill" Color="{DynamicResource RelatedHoverColor}" Opacity="0.50" />

    <!-- Male spouse brushes -->
    <SolidColorBrush x:Key="MaleSpouseLivingFill" Color="{DynamicResource SpouseColor}" />
    <SolidColorBrush x:Key="MaleSpouseLivingHoverFill" Color="{DynamicResource SpouseHoverColor}" />
    <SolidColorBrush x:Key="MaleSpouseDeceasedStroke" Color="{DynamicResource SpouseColor}" />
    <SolidColorBrush x:Key="MaleSpouseDeceasedHoverFill" Color="{DynamicResource SpouseHoverColor}" Opacity="0.50" />

    <!-- Male sibling brushes -->
    <SolidColorBrush x:Key="MaleSiblingLivingFill" Color="{DynamicResource SiblingColor}" />
    <SolidColorBrush x:Key="MaleSiblingLivingHoverFill" Color="{DynamicResource SiblingHoverColor}" />
    <SolidColorBrush x:Key="MaleSiblingDeceasedStroke" Color="{DynamicResource SiblingColor}" />
    <SolidColorBrush x:Key="MaleSiblingDeceasedHoverFill" Color="{DynamicResource SiblingHoverColor}" Opacity="0.50" />

    <!-- Male sibling left brushes -->
    <LinearGradientBrush x:Key="MaleSiblingLeftLivingFill" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#ff6797c8" Offset="0" />
        <GradientStop Color="#fff09822" Offset="1" />
        <GradientStop Color="#fff09822" Offset="0.505" />
        <GradientStop Color="#ff6797c8" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MaleSiblingLeftLivingHoverFill" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#ff87b7e8" Offset="0" />
        <GradientStop Color="#ffffb842" Offset="1" />
        <GradientStop Color="#ffffb842" Offset="0.505" />
        <GradientStop Color="#ff87b7e8" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MaleSiblingLeftDeceasedStroke" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#ff6797c8" Offset="0.481" />
        <GradientStop Color="#fff09822" Offset="0.51" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MaleSiblingLeftDeceasedHoverFill" EndPoint="1,0.5" StartPoint="0,0.5" Opacity="0.50">
        <GradientStop Color="#ff87b7e8" Offset="0" />
        <GradientStop Color="#ffffb842" Offset="1" />
        <GradientStop Color="#ffffb842" Offset="0.505" />
        <GradientStop Color="#ff87b7e8" Offset="0.5" />
    </LinearGradientBrush>

    <!-- Male sibling right brushes -->
    <LinearGradientBrush x:Key="MaleSiblingRightLivingFill" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#fff09822" Offset="0" />
        <GradientStop Color="#ff6797c8" Offset="1" />
        <GradientStop Color="#ff6797c8" Offset="0.505" />
        <GradientStop Color="#fff09822" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MaleSiblingRightLivingHoverFill" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#ffffb842" Offset="0" />
        <GradientStop Color="#ff87b7e8" Offset="1" />
        <GradientStop Color="#ff87b7e8" Offset="0.505" />
        <GradientStop Color="#ffffb842" Offset="0.5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MaleSiblingRightDeceasedStroke" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#fff09822" Offset="0.481" />
        <GradientStop Color="#ff6797c8" Offset="0.51" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MaleSiblingRightDeceasedHoverFill" EndPoint="1,0.5" StartPoint="0,0.5" Opacity="0.50">
        <GradientStop Color="#ffffb842" Offset="0" />
        <GradientStop Color="#ff87b7e8" Offset="1" />
        <GradientStop Color="#ff87b7e8" Offset="0.505" />
        <GradientStop Color="#ffffb842" Offset="0.5" />
    </LinearGradientBrush>


    <!-- Spouse group indicator spouse -->
    <SolidColorBrush x:Key="SpouseGroupFill" Color="{DynamicResource SpouseColor}" />
    <LinearGradientBrush x:Key="SpouseGroupStroke" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#00000000" Offset="0.043" />
        <GradientStop Color="{DynamicResource SpouseColor}" Offset="0.524" />
        <GradientStop Color="#00000000" Offset="0.519" />
    </LinearGradientBrush>

    <!-- Sibling group indicator spouse -->
    <SolidColorBrush x:Key="SiblingGroupFill" Color="{DynamicResource SiblingColor}" />
    <LinearGradientBrush x:Key="SiblingGroupStroke" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#00000000" Offset="0.043" />
        <GradientStop Color="{DynamicResource SiblingColor}" Offset="0.524" />
        <GradientStop Color="#00000000" Offset="0.519" />
    </LinearGradientBrush>

    <!-- Sibling left group indicator spouse -->
    <SolidColorBrush x:Key="SiblingLeftGroupFill" Color="{DynamicResource SiblingColor}" />
    <LinearGradientBrush x:Key="SiblingLeftGroupStroke" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#00000000" Offset="0.043" />
        <GradientStop Color="{DynamicResource SiblingColor}" Offset="0.524" />
        <GradientStop Color="#00000000" Offset="0.519" />
    </LinearGradientBrush>

    <!-- Sibling right group indicator spouse -->
    <SolidColorBrush x:Key="SiblingRightGroupFill" Color="{DynamicResource SiblingColor}" />
    <LinearGradientBrush x:Key="SiblingRightGroupStroke" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#00000000" Offset="0.043" />
        <GradientStop Color="{DynamicResource SiblingColor}" Offset="0.524" />
        <GradientStop Color="#00000000" Offset="0.519" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DiagramToolTipBackgroundBrush" Color="#FF202020" />

    <!-- ToolTip -->
    <Style TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="detailInfo">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="30"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Name="Border" Background="{DynamicResource DiagramToolTipBackgroundBrush}" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="10,10,10,10">
                        <StackPanel>
                            <Border BorderBrush="#02747474" Background="#02000000" HorizontalAlignment="Center" Margin="10,5,10,0" VerticalAlignment="Top" BorderThickness="1,1,1,1" x:Name="AvatarPhotoBorder">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect ShadowDepth="7" Softness="0.75" />
                                </Border.BitmapEffect>
                                <Image x:Name="Avatar" Source="{Binding Path=Person.Avatar, Mode=OneWay}" Stretch="Uniform" VerticalAlignment="Top" MaxWidth="90" MaxHeight="85" HorizontalAlignment="Left" StretchDirection="DownOnly" />
                            </Border>
                            <ContentPresenter Margin="10,0,10,3" HorizontalAlignment="Center" TextBlock.TextAlignment="Right" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                        </Trigger>
                        <EventTrigger RoutedEvent="Border.Loaded" SourceName="Border">
                            <BeginStoryboard Storyboard="{StaticResource detailInfo}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Welcome Header Background -->
    <DrawingBrush x:Key="WelcomeHeaderBg">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#FF939598" Geometry="F1 M 538.921,778.721L 536.471,779.776L 535.944,778.551L 538.393,777.496L 538.921,778.721 Z M 534.022,780.83L 531.573,781.885L 531.045,780.66L 533.495,779.605L 534.022,780.83 Z M 529.123,782.939L 526.674,783.994L 526.147,782.769L 528.596,781.714L 529.123,782.939 Z M 524.225,785.048L 521.775,786.103L 521.248,784.878L 523.697,783.823L 524.225,785.048 Z M 519.326,787.157L 516.877,788.211L 516.349,786.987L 518.799,785.932L 519.326,787.157 Z M 514.427,789.266L 511.978,790.32L 511.451,789.096L 513.9,788.041L 514.427,789.266 Z M 509.529,791.375L 507.079,792.429L 506.552,791.205L 509.001,790.15L 509.529,791.375 Z M 504.63,793.484L 502.181,794.538L 501.653,793.314L 504.103,792.259L 504.63,793.484 Z M 499.731,795.593L 497.282,796.647L 496.755,795.423L 499.204,794.368L 499.731,795.593 Z M 494.833,797.702L 492.383,798.756L 491.856,797.531L 494.305,796.477L 494.833,797.702 Z M 489.934,799.811L 487.485,800.865L 486.957,799.64L 489.407,798.586L 489.934,799.811 Z M 485.035,801.92L 482.586,802.974L 482.059,801.749L 484.508,800.695L 485.035,801.92 Z M 480.137,804.029L 477.687,805.083L 477.16,803.858L 479.609,802.804L 480.137,804.029 Z M 475.238,806.137L 472.789,807.192L 472.261,805.967L 474.711,804.913L 475.238,806.137 Z M 470.339,808.246L 467.89,809.301L 467.363,808.076L 469.812,807.022L 470.339,808.246 Z M 465.441,810.355L 462.991,811.41L 462.464,810.185L 464.913,809.131L 465.441,810.355 Z M 460.542,812.464L 458.093,813.519L 457.565,812.294L 460.015,811.24L 460.542,812.464 Z M 455.643,814.573L 453.194,815.628L 452.667,814.403L 455.116,813.349L 455.643,814.573 Z M 450.745,816.682L 448.295,817.737L 447.768,816.512L 450.218,815.458L 450.745,816.682 Z M 445.846,818.791L 443.397,819.846L 442.87,818.621L 445.319,817.566L 445.846,818.791 Z M 440.947,820.9L 438.498,821.955L 437.971,820.73L 440.42,819.675L 440.947,820.9 Z M 436.049,823.009L 433.599,824.063L 433.072,822.839L 435.522,821.784L 436.049,823.009 Z M 431.262,823.424L 433.001,821.403L 434.012,822.273L 432.272,824.294L 431.262,823.424 Z M 434.741,819.382L 436.481,817.361L 437.491,818.231L 435.751,820.252L 434.741,819.382 Z M 438.22,815.34L 439.96,813.319L 440.97,814.189L 439.231,816.21L 438.22,815.34 Z M 441.7,811.298L 443.439,809.277L 444.45,810.147L 442.71,812.168L 441.7,811.298 Z M 445.179,807.256L 446.919,805.235L 447.929,806.104L 446.189,808.125L 445.179,807.256 Z M 448.658,803.214L 450.398,801.193L 451.408,802.062L 449.669,804.083L 448.658,803.214 Z M 452.137,799.171L 453.877,797.15L 454.888,798.02L 453.148,800.041L 452.137,799.171 Z M 455.617,795.129L 457.356,793.108L 458.367,793.978L 456.627,795.999L 455.617,795.129 Z M 459.096,791.087L 460.836,789.066L 461.846,789.936L 460.107,791.957L 459.096,791.087 Z M 462.575,787.045L 464.315,785.024L 465.325,785.894L 463.586,787.915L 462.575,787.045 Z M 466.055,783.003L 467.794,780.982L 468.805,781.852L 467.065,783.873L 466.055,783.003 Z M 469.534,778.961L 470.161,778.232L 471.172,779.101L 470.544,779.83L 469.534,778.961 Z M 543.819,776.612L 541.37,777.667L 540.843,776.442L 543.292,775.388L 543.819,776.612 Z " />
                    <GeometryDrawing Brush="#FF939598" Geometry="F1 M 494.331,778.458L 491.827,779.374L 491.369,778.121L 493.873,777.205L 494.331,778.458 Z M 489.322,780.289L 486.818,781.205L 486.36,779.953L 488.864,779.037L 489.322,780.289 Z M 484.313,782.121L 481.809,783.037L 481.351,781.785L 483.855,780.869L 484.313,782.121 Z M 479.304,783.953L 476.8,784.869L 476.342,783.616L 478.846,782.701L 479.304,783.953 Z M 474.295,785.784L 471.791,786.7L 471.333,785.448L 473.837,784.532L 474.295,785.784 Z M 469.286,787.616L 466.782,788.532L 466.324,787.28L 468.829,786.364L 469.286,787.616 Z M 464.277,789.448L 461.773,790.364L 461.315,789.111L 463.82,788.196L 464.277,789.448 Z M 459.269,791.279L 456.764,792.195L 456.306,790.943L 458.811,790.027L 459.269,791.279 Z M 454.26,793.111L 451.755,794.027L 451.297,792.775L 453.802,791.859L 454.26,793.111 Z M 449.251,794.943L 446.746,795.859L 446.288,794.606L 448.793,793.691L 449.251,794.943 Z M 444.242,796.775L 441.737,797.69L 441.279,796.438L 443.784,795.522L 444.242,796.775 Z M 439.233,798.606L 436.728,799.522L 436.27,798.27L 438.775,797.354L 439.233,798.606 Z M 434.224,800.438L 431.719,801.354L 431.262,800.101L 433.766,799.186L 434.224,800.438 Z M 429.215,802.27L 426.711,803.185L 426.253,801.933L 428.757,801.017L 429.215,802.27 Z M 424.206,804.101L 421.702,805.017L 421.244,803.765L 423.748,802.849L 424.206,804.101 Z M 419.197,805.933L 416.693,806.849L 416.235,805.597L 418.739,804.681L 419.197,805.933 Z M 414.188,807.765L 411.684,808.68L 411.226,807.428L 413.73,806.512L 414.188,807.765 Z M 409.179,809.596L 406.675,810.512L 406.217,809.26L 408.721,808.344L 409.179,809.596 Z M 404.17,811.428L 401.666,812.344L 401.208,811.092L 403.712,810.176L 404.17,811.428 Z M 399.161,813.26L 396.657,814.175L 396.199,812.923L 398.703,812.007L 399.161,813.26 Z M 394.152,815.091L 391.648,816.007L 391.19,814.755L 393.695,813.839L 394.152,815.091 Z M 389.144,816.923L 386.639,817.839L 386.181,816.587L 388.686,815.671L 389.144,816.923 Z M 384.135,818.755L 381.63,819.67L 381.172,818.418L 383.677,817.502L 384.135,818.755 Z M 379.126,820.586L 376.621,821.502L 376.163,820.25L 378.668,819.334L 379.126,820.586 Z M 374.117,822.418L 371.612,823.334L 371.154,822.082L 373.659,821.166L 374.117,822.418 Z M 369.108,824.25L 368.52,824.465L 368.405,824.496L 368.287,824.507L 368.17,824.495L 368.056,824.463L 367.949,824.412L 367.853,824.343L 367.771,824.257L 367.706,824.158L 367.657,824.05L 367.63,823.935L 367.623,823.817L 367.639,823.699L 367.673,823.586L 367.727,823.48L 367.799,823.387L 367.887,823.308L 369.512,822.074L 370.319,823.135L 368.694,824.37L 368.062,823.213L 368.65,822.997L 369.108,824.25 Z M 371.636,820.461L 373.759,818.848L 374.566,819.91L 372.442,821.522L 371.636,820.461 Z M 375.883,817.235L 378.006,815.622L 378.813,816.684L 376.689,818.297L 375.883,817.235 Z M 380.13,814.009L 382.254,812.396L 383.06,813.458L 380.937,815.071L 380.13,814.009 Z M 384.377,810.783L 386.501,809.17L 387.307,810.232L 385.184,811.845L 384.377,810.783 Z M 388.624,807.557L 390.748,805.944L 391.554,807.006L 389.431,808.619L 388.624,807.557 Z M 392.871,804.331L 394.995,802.718L 395.801,803.78L 393.678,805.393L 392.871,804.331 Z M 397.119,801.105L 399.242,799.492L 400.049,800.554L 397.925,802.167L 397.119,801.105 Z M 401.366,797.88L 403.489,796.267L 404.296,797.328L 402.172,798.941L 401.366,797.88 Z M 405.613,794.654L 407.736,793.041L 408.543,794.102L 406.419,795.715L 405.613,794.654 Z M 409.86,791.428L 411.984,789.815L 412.79,790.877L 410.666,792.49L 409.86,791.428 Z M 414.107,788.202L 416.231,786.589L 417.037,787.651L 414.914,789.264L 414.107,788.202 Z M 418.354,784.976L 420.478,783.363L 421.284,784.425L 419.161,786.038L 418.354,784.976 Z M 422.601,781.75L 424.725,780.137L 425.531,781.199L 423.408,782.812L 422.601,781.75 Z M 426.849,778.524L 428.972,776.911L 429.779,777.973L 427.655,779.586L 426.849,778.524 Z M 431.096,775.298L 432.041,774.58L 432.848,775.642L 431.902,776.36L 431.096,775.298 Z M 499.34,776.626L 496.836,777.542L 496.378,776.29L 498.882,775.374L 499.34,776.626 Z " />
                    <GeometryDrawing Brush="#FF939598" Geometry="F1 M 655.615,783.638L 653.643,785.432L 652.745,784.446L 654.718,782.652L 655.615,783.638 Z M 651.67,787.227L 649.698,789.022L 648.8,788.036L 650.773,786.241L 651.67,787.227 Z M 647.725,790.817L 645.753,792.611L 644.856,791.625L 646.828,789.83L 647.725,790.817 Z M 643.781,794.406L 641.808,796.2L 640.911,795.214L 642.883,793.42L 643.781,794.406 Z M 639.836,797.995L 637.863,799.79L 636.966,798.804L 638.939,797.009L 639.836,797.995 Z M 635.891,801.584L 633.919,803.379L 633.021,802.393L 634.994,800.598L 635.891,801.584 Z M 631.946,805.174L 629.974,806.968L 629.077,805.982L 631.049,804.188L 631.946,805.174 Z M 628.001,808.763L 626.029,810.558L 625.132,809.572L 627.104,807.777L 628.001,808.763 Z M 624.057,812.352L 622.084,814.147L 621.187,813.161L 623.159,811.366L 624.057,812.352 Z M 620.112,815.942L 618.14,817.736L 617.242,816.75L 619.215,814.955L 620.112,815.942 Z M 616.167,819.531L 614.195,821.326L 613.297,820.339L 615.27,818.545L 616.167,819.531 Z M 612.222,823.12L 610.25,824.915L 609.353,823.929L 611.325,822.134L 612.222,823.12 Z M 608.278,826.71L 606.305,828.504L 605.408,827.518L 607.38,825.723L 608.278,826.71 Z M 604.333,830.299L 602.36,832.094L 601.463,831.107L 603.435,829.313L 604.333,830.299 Z M 600.388,833.888L 598.416,835.683L 597.518,834.697L 599.491,832.902L 600.388,833.888 Z M 596.443,837.478L 594.471,839.272L 593.574,838.286L 595.546,836.491L 596.443,837.478 Z M 592.498,841.067L 590.526,842.861L 589.629,841.875L 591.601,840.081L 592.498,841.067 Z M 588.554,844.656L 586.581,846.451L 585.684,845.465L 587.656,843.67L 588.554,844.656 Z M 583.926,845.215L 582.367,843.051L 583.45,842.271L 585.008,844.436L 583.926,845.215 Z M 580.809,840.886L 579.251,838.722L 580.333,837.943L 581.891,840.107L 580.809,840.886 Z M 577.693,836.558L 576.135,834.394L 577.217,833.615L 578.775,835.779L 577.693,836.558 Z M 574.577,832.23L 573.019,830.066L 574.101,829.287L 575.659,831.451L 574.577,832.23 Z M 571.461,827.901L 569.903,825.737L 570.985,824.958L 572.543,827.122L 571.461,827.901 Z M 568.345,823.573L 566.787,821.409L 567.869,820.63L 569.427,822.794L 568.345,823.573 Z M 565.229,819.245L 563.671,817.081L 564.753,816.302L 566.311,818.466L 565.229,819.245 Z M 562.112,814.917L 560.554,812.753L 561.636,811.974L 563.194,814.138L 562.112,814.917 Z M 558.996,810.588L 557.438,808.424L 558.52,807.645L 560.078,809.809L 558.996,810.588 Z M 555.88,806.26L 554.322,804.096L 555.404,803.317L 556.962,805.481L 555.88,806.26 Z M 552.764,801.932L 551.206,799.768L 552.288,798.989L 553.846,801.153L 552.764,801.932 Z M 549.648,797.604L 548.09,795.439L 549.172,794.66L 550.73,796.825L 549.648,797.604 Z M 546.532,793.275L 544.974,791.111L 546.056,790.332L 547.614,792.496L 546.532,793.275 Z M 543.415,788.947L 541.857,786.783L 542.939,786.004L 544.497,788.168L 543.415,788.947 Z M 540.299,784.619L 538.741,782.455L 539.823,781.676L 541.381,783.84L 540.299,784.619 Z M 537.183,780.291L 535.625,778.126L 536.707,777.347L 538.265,779.511L 537.183,780.291 Z M 659.56,780.049L 657.587,781.843L 656.69,780.857L 658.662,779.062L 659.56,780.049 Z " />
                    <GeometryDrawing Brush="#FF050708" Geometry="F1 M 622.031,824.099C 624.659,822.497 628.959,821.111 631.643,821.001C 634.328,820.888 634.375,822.097 631.755,823.696C 629.133,825.297 624.831,826.687 622.143,826.796C 619.461,826.905 619.412,825.695 622.031,824.099 Z " />
                    <GeometryDrawing Brush="#FF050708" Geometry="F1 M 605.331,837.681C 605.331,837.681 590.3,846.852 588.896,847.704C 587.492,848.564 588.836,848.936 589.719,848.9C 590.604,848.864 592.257,848.737 594.093,847.616C 595.929,846.497 621.755,830.74 621.755,830.74L 623.412,830.672C 623.412,830.672 614.773,835.94 613.479,836.729C 612.185,837.523 613.188,837.664 613.959,837.632C 614.732,837.597 616.164,837.477 617.464,836.689C 618.757,835.9 626.521,830.973 628.68,829.656C 630.839,828.337 632.099,826.693 628.344,826.848L 615.309,827.383C 611.555,827.536 607.203,829.315 605.044,830.631C 602.883,831.948 594.456,836.901 593.161,837.689C 591.864,838.481 593.084,838.491 593.857,838.459C 594.628,838.427 596.279,838.177 597.573,837.385C 598.867,836.595 607.505,831.325 607.505,831.325L 609.161,831.257C 609.161,831.257 583.336,847.015 581.5,848.136C 579.664,849.255 581.104,849.255 581.987,849.221C 582.875,849.183 585.727,848.636 587.131,847.78C 588.528,846.924 603.563,837.751 603.563,837.751L 605.331,837.681 Z " />
                    <GeometryDrawing Brush="{DynamicResource MalePrimaryLivingFill}" Geometry="F1 M 580.752,806.943C 580.752,804.257 582.932,802.08 585.617,802.08C 588.303,802.08 590.481,804.257 590.481,806.943C 590.481,809.632 588.303,811.807 585.617,811.807C 582.932,811.807 580.752,809.632 580.752,806.943 Z " />
                    <GeometryDrawing Brush="{DynamicResource MalePrimaryLivingFill}" Geometry="F1 M 586.724,830.159L 586.724,846.993C 586.724,848.431 588.823,849.204 589.705,849.204C 590.593,849.204 592.14,849.095 592.14,847.216L 592.14,818.884L 593.797,818.884L 593.797,829.053C 593.797,830.38 595.125,830.713 595.899,830.713C 596.672,830.713 597.997,830.603 597.997,829.276C 597.997,827.951 597.667,819.657 597.667,817.448C 597.667,815.235 596.12,812.363 592.36,812.363L 579.315,812.363C 575.557,812.363 574.011,815.235 574.011,817.448C 574.011,819.657 573.677,827.951 573.677,829.276C 573.677,830.603 575.005,830.713 575.779,830.713C 576.552,830.713 577.88,830.38 577.88,829.053L 577.88,818.884L 579.539,818.884L 579.539,847.216C 579.539,849.095 581.085,849.204 581.969,849.204C 582.855,849.204 584.956,848.431 584.956,846.993L 584.956,830.159L 586.724,830.159 Z " />
                    <GeometryDrawing Geometry="F1 M 620.085,824.617C 620.085,843.82 604.519,859.388 585.317,859.388C 566.112,859.388 550.544,843.82 550.544,824.617C 550.544,805.415 566.112,789.845 585.317,789.845C 604.519,789.845 620.085,805.415 620.085,824.617 Z ">
                        <GeometryDrawing.Pen>
                            <Pen Thickness="4" MiterLimit="2.75" Brush="#FFC7C8CA" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="#FF3953A4" Geometry="F1 M 586.039,783.328L 588.085,787.48L 592.669,788.148L 589.355,791.381L 590.136,795.945L 586.039,793.788L 581.937,795.945L 582.719,791.381L 579.404,788.148L 583.989,787.48L 586.039,783.328 Z ">
                        <GeometryDrawing.Pen>
                            <Pen Thickness="2.66667" MiterLimit="2.75" Brush="#FFFFFFFF" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="#FF050708" Geometry="F1 M 460.769,809.707C 462.861,808.545 466.248,807.607 468.337,807.607C 470.428,807.607 470.428,808.545 468.337,809.707C 466.248,810.868 462.861,811.805 460.769,811.805C 458.68,811.805 458.68,810.868 460.769,809.707 Z " />
                    <GeometryDrawing Brush="#FF050708" Geometry="F1 M 441.375,821.891C 441.375,821.891 432.776,826.712 431.915,827.187C 431.056,827.665 431.572,827.997 432.345,827.997C 433.117,827.997 434.58,827.665 435.525,827.187C 436.472,826.712 445.332,821.793 445.332,821.793L 449.889,821.793C 449.889,821.793 455.844,816.007 456.62,815.483C 457.393,814.957 457.737,815.149 457.565,815.385C 457.393,815.625 454.488,818.667 453.889,819.049C 453.287,819.431 454.488,819.528 455.435,819.383C 456.383,819.243 457.672,818.761 458.445,818.093C 459.219,817.425 462.896,813.717 463.412,813.241C 463.927,812.763 463.843,812.189 462.379,812.189L 454.297,812.189C 452.836,812.189 450.687,812.763 449.481,813.241C 448.277,813.717 438.581,817.425 436.947,818.093C 435.313,818.761 434.885,819.243 435.313,819.383C 435.744,819.528 437.292,819.431 438.065,819.049C 438.837,818.667 446.903,815.625 447.589,815.385C 448.277,815.149 449.312,814.957 448.192,815.483C 447.073,816.007 432.175,821.793 432.175,821.793L 436.732,821.793C 436.732,821.793 427.873,826.712 427.099,827.187C 426.327,827.665 426.584,827.997 427.356,827.997C 428.131,827.997 429.852,827.665 430.711,827.187C 431.572,826.712 440.344,821.891 440.344,821.891L 441.375,821.891 Z " />
                    <GeometryDrawing Brush="{DynamicResource MaleSiblingLivingFill}" Geometry="F1 M 426.488,795.04C 426.488,792.951 428.183,791.256 430.272,791.256C 432.363,791.256 434.055,792.951 434.055,795.04C 434.055,797.129 432.363,798.824 430.272,798.824C 428.183,798.824 426.488,797.129 426.488,795.04 Z " />
                    <GeometryDrawing Brush="{DynamicResource MaleSiblingLivingFill}" Geometry="F1 M 430.875,816.989C 430.875,816.989 430.959,825.679 430.959,826.537C 430.959,827.395 432.079,827.997 432.849,827.997C 433.627,827.997 434.485,827.395 434.573,826.537C 434.657,825.679 434.657,816.819 434.657,816.819L 439.216,816.819C 439.216,816.819 434.744,806.391 434.573,805.445C 434.399,804.497 435.088,804.841 435.345,805.271C 435.604,805.703 438.185,811.185 438.272,811.871C 438.356,812.56 439.731,812.732 440.419,812.473C 441.109,812.215 441.537,811.359 441.109,810.155C 440.677,808.949 437.668,802.261 437.325,801.403C 436.981,800.543 435.861,799.511 434.399,799.511L 426.317,799.511C 424.855,799.511 423.736,800.543 423.392,801.403C 423.049,802.261 420.04,808.949 419.609,810.155C 419.181,811.359 419.609,812.215 420.297,812.473C 420.985,812.732 422.361,812.56 422.447,811.871C 422.533,811.185 425.115,805.703 425.372,805.271C 425.628,804.841 426.317,804.497 426.145,805.445C 425.972,806.391 421.5,816.819 421.5,816.819L 426.06,816.819C 426.06,816.819 426.06,825.679 426.145,826.537C 426.229,827.395 427.091,827.997 427.865,827.997C 428.639,827.997 429.757,827.395 429.757,826.537C 429.757,825.679 429.844,816.989 429.844,816.989L 430.875,816.989 Z " />
                    <GeometryDrawing Brush="{DynamicResource FemaleSpouseLivingFill}" Geometry="F1 M 518.479,784.253C 518.479,783.836 518.819,783.497 519.235,783.497C 519.655,783.497 519.995,783.836 519.995,784.253C 519.995,784.675 519.655,785.015 519.235,785.015C 518.819,785.015 518.479,784.675 518.479,784.253 Z " />
                    <GeometryDrawing Brush="{DynamicResource FemaleSpouseLivingFill}" Geometry="F1 M 519.409,787.875L 519.409,790.503C 519.409,790.728 519.735,790.844 519.873,790.844C 520.012,790.844 520.253,790.829 520.253,790.537L 520.253,786.117L 520.511,786.117L 520.511,787.704C 520.511,787.912 520.72,787.963 520.841,787.963C 520.96,787.963 521.167,787.944 521.167,787.737C 521.167,787.531 521.115,786.237 521.115,785.893C 521.115,785.548 520.873,785.099 520.288,785.099L 518.253,785.099C 517.667,785.099 517.427,785.548 517.427,785.893C 517.427,786.237 517.372,787.531 517.372,787.737C 517.372,787.944 517.583,787.963 517.7,787.963C 517.823,787.963 518.028,787.912 518.028,787.704L 518.028,786.117L 518.287,786.117L 518.287,790.537C 518.287,790.829 518.528,790.844 518.667,790.844C 518.803,790.844 519.133,790.728 519.133,790.503L 519.133,787.875L 519.409,787.875 Z " />
                    <GeometryDrawing Brush="{DynamicResource FemaleSpouseLivingFill}" Geometry="F1 M 515.171,789.869C 515.171,789.451 515.511,789.112 515.931,789.112C 516.351,789.112 516.689,789.451 516.689,789.869C 516.689,790.291 516.351,790.628 515.931,790.628C 515.511,790.628 515.171,790.291 515.171,789.869 Z " />
                    <GeometryDrawing Brush="{DynamicResource FemaleSpouseLivingFill}" Geometry="F1 M 516.103,793.492L 516.103,796.117C 516.103,796.341 516.433,796.461 516.569,796.461C 516.707,796.461 516.949,796.445 516.949,796.149L 516.949,791.733L 517.207,791.733L 517.207,793.319C 517.207,793.527 517.416,793.579 517.535,793.579C 517.659,793.579 517.861,793.56 517.861,793.353C 517.861,793.144 517.811,791.852 517.811,791.508C 517.811,791.163 517.569,790.712 516.98,790.712L 514.947,790.712C 514.361,790.712 514.12,791.163 514.12,791.508C 514.12,791.852 514.068,793.144 514.068,793.353C 514.068,793.56 514.275,793.579 514.396,793.579C 514.517,793.579 514.724,793.527 514.724,793.319L 514.724,791.733L 514.983,791.733L 514.983,796.149C 514.983,796.445 515.224,796.461 515.363,796.461C 515.501,796.461 515.829,796.341 515.829,796.117L 515.829,793.492L 516.103,793.492 Z " />
                    <GeometryDrawing Brush="{DynamicResource FemaleSpouseLivingFill}" Geometry="F1 M 511.708,784.016C 511.708,783.599 512.048,783.259 512.468,783.259C 512.884,783.259 513.225,783.599 513.225,784.016C 513.225,784.437 512.884,784.773 512.468,784.773C 512.048,784.773 511.708,784.437 511.708,784.016 Z " />
                    <GeometryDrawing Brush="{DynamicResource FemaleSpouseLivingFill}" Geometry="F1 M 512.637,787.637L 512.637,790.264C 512.637,790.487 512.967,790.607 513.107,790.607C 513.244,790.607 513.483,790.589 513.483,790.297L 513.483,785.879L 513.745,785.879L 513.745,787.467C 513.745,787.671 513.949,787.724 514.072,787.724C 514.189,787.724 514.399,787.707 514.399,787.5C 514.399,787.292 514.348,786 514.348,785.656C 514.348,785.312 514.107,784.86 513.517,784.86L 511.481,784.86C 510.895,784.86 510.655,785.312 510.655,785.656C 510.655,786 510.604,787.292 510.604,787.5C 510.604,787.707 510.811,787.724 510.933,787.724C 511.056,787.724 511.259,787.671 511.259,787.467L 511.259,785.879L 511.519,785.879L 511.519,790.297C 511.519,790.589 511.76,790.607 511.896,790.607C 512.035,790.607 512.363,790.487 512.363,790.264L 512.363,787.637L 512.637,787.637 Z " />
                    <GeometryDrawing Geometry="F1 M 486.737,792.957C 492.673,784.716 504.168,782.845 512.412,788.783C 520.656,794.717 522.527,806.215 516.591,814.456">
                        <GeometryDrawing.Pen>
                            <Pen Thickness="1.33333" MiterLimit="2.75" Brush="{DynamicResource FemaleSpouseLivingFill}" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="#FF050708" Geometry="F1 M 527.745,810.413C 529.8,809.272 533.131,808.348 535.183,808.348C 537.24,808.348 537.24,809.272 535.183,810.413C 533.131,811.548 529.803,812.473 527.745,812.473C 525.695,812.473 525.695,811.548 527.745,810.413 Z " />
                    <GeometryDrawing Brush="#FF050708" Geometry="F1 M 510.48,822.381C 510.48,822.381 502.028,827.12 501.183,827.591C 500.34,828.059 500.844,828.387 501.608,828.387C 502.365,828.387 503.804,828.059 504.733,827.591C 505.663,827.12 514.371,822.292 514.371,822.292L 518.848,822.292C 518.848,822.292 524.701,816.603 525.465,816.087C 526.223,815.572 526.561,815.756 526.395,815.992C 526.223,816.225 523.372,819.217 522.777,819.589C 522.187,819.968 523.372,820.059 524.3,819.919C 525.231,819.779 526.497,819.312 527.26,818.656C 528.019,817.999 531.633,814.349 532.14,813.881C 532.648,813.413 532.565,812.849 531.128,812.849L 523.181,812.849C 521.748,812.849 519.633,813.413 518.449,813.881C 517.267,814.349 507.736,817.999 506.129,818.656C 504.525,819.312 504.104,819.779 504.525,819.919C 504.947,820.059 506.468,819.968 507.229,819.589C 507.989,819.217 515.917,816.225 516.591,815.992C 517.267,815.756 518.283,815.572 517.183,816.087C 516.083,816.603 501.44,822.292 501.44,822.292L 505.919,822.292C 505.919,822.292 497.215,827.12 496.452,827.591C 495.693,828.059 495.945,828.387 496.705,828.387C 497.465,828.387 499.156,828.059 500.003,827.591C 500.844,827.12 509.468,822.381 509.468,822.381L 510.48,822.381 Z " />
                    <GeometryDrawing Brush="{DynamicResource FemaleSpouseLivingFill}" Geometry="F1 M 495.852,795.991C 495.852,793.939 497.517,792.272 499.571,792.272C 501.623,792.272 503.289,793.939 503.289,795.991C 503.289,798.045 501.623,799.709 499.571,799.709C 497.517,799.709 495.852,798.045 495.852,795.991 Z " />
                    <GeometryDrawing Brush="{DynamicResource FemaleSpouseLivingFill}" Geometry="F1 M 500.161,817.568C 500.161,817.568 500.245,826.103 500.245,826.948C 500.245,827.797 501.345,828.387 502.105,828.387C 502.867,828.387 503.709,827.797 503.796,826.948C 503.88,826.103 503.88,817.399 503.88,817.399L 508.363,817.399C 508.363,817.399 503.965,807.152 503.796,806.217C 503.627,805.288 504.303,805.632 504.556,806.049C 504.809,806.472 507.343,811.864 507.431,812.539C 507.515,813.215 508.864,813.385 509.54,813.129C 510.221,812.877 510.641,812.031 510.221,810.848C 509.796,809.667 506.839,803.091 506.503,802.248C 506.165,801.403 505.064,800.389 503.627,800.389L 495.681,800.389C 494.247,800.389 493.145,801.403 492.809,802.248C 492.472,803.091 489.511,809.667 489.091,810.848C 488.669,812.031 489.091,812.877 489.767,813.129C 490.441,813.385 491.796,813.215 491.879,812.539C 491.964,811.864 494.5,806.472 494.752,806.049C 495.004,805.632 495.681,805.288 495.513,806.217C 495.343,807.152 490.949,817.399 490.949,817.399L 495.431,817.399C 495.431,817.399 495.431,826.103 495.513,826.948C 495.599,827.797 496.444,828.387 497.201,828.387C 497.965,828.387 499.061,827.797 499.061,826.948C 499.061,826.103 499.148,817.568 499.148,817.568L 500.161,817.568 Z " />
                    <GeometryDrawing Brush="#FF050708" Geometry="F1 M 395.313,808.204C 397.356,806.957 400.708,805.877 402.8,805.791C 404.889,805.704 404.928,806.645 402.885,807.892C 400.841,809.137 397.489,810.22 395.399,810.305C 393.308,810.392 393.269,809.451 395.313,808.204 Z " />
                    <GeometryDrawing Brush="#FF050708" Geometry="F1 M 382.3,818.785C 382.3,818.785 370.588,825.931 369.495,826.597C 368.4,827.265 369.449,827.556 370.137,827.528C 370.825,827.501 372.113,827.401 373.544,826.527C 374.973,825.655 395.095,813.379 395.095,813.379L 396.385,813.324C 396.385,813.324 389.657,817.431 388.647,818.045C 387.639,818.665 388.417,818.772 389.021,818.748C 389.624,818.723 390.741,818.631 391.751,818.013C 392.759,817.399 398.808,813.563 400.491,812.533C 402.173,811.509 403.153,810.224 400.229,810.347L 390.073,810.764C 387.148,810.884 383.757,812.267 382.075,813.292C 380.392,814.319 373.825,818.179 372.819,818.795C 371.808,819.411 372.756,819.416 373.36,819.393C 373.961,819.367 375.248,819.173 376.256,818.556C 377.264,817.94 383.993,813.837 383.993,813.837L 385.284,813.784C 385.284,813.784 365.163,826.06 363.732,826.931C 362.303,827.805 363.424,827.805 364.112,827.776C 364.803,827.747 367.025,827.321 368.119,826.656C 369.211,825.989 380.921,818.844 380.921,818.844L 382.3,818.785 Z " />
                    <GeometryDrawing Brush="{DynamicResource MaleSiblingLivingFill}" Geometry="F1 M 363.151,794.839C 363.151,792.747 364.848,791.051 366.941,791.051C 369.032,791.051 370.729,792.747 370.729,794.839C 370.729,796.931 369.032,798.629 366.941,798.629C 364.848,798.629 363.151,796.931 363.151,794.839 Z " />
                    <GeometryDrawing Brush="{DynamicResource MaleSiblingLivingFill}" Geometry="F1 M 367.804,812.928L 367.804,826.043C 367.804,827.163 369.439,827.765 370.127,827.765C 370.817,827.765 372.024,827.681 372.024,826.215L 372.024,804.141L 373.315,804.141L 373.315,812.067C 373.315,813.1 374.347,813.359 374.949,813.359C 375.553,813.359 376.587,813.275 376.587,812.239C 376.587,811.205 376.329,804.744 376.329,803.023C 376.329,801.299 375.123,799.063 372.195,799.063L 362.031,799.063C 359.104,799.063 357.897,801.299 357.897,803.023C 357.897,804.744 357.639,811.205 357.639,812.239C 357.639,813.275 358.671,813.359 359.275,813.359C 359.877,813.359 360.912,813.1 360.912,812.067L 360.912,804.141L 362.204,804.141L 362.204,826.215C 362.204,827.681 363.409,827.765 364.097,827.765C 364.788,827.765 366.424,827.163 366.424,826.043L 366.424,812.928L 367.804,812.928 Z " />
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>



    <Style x:Key="dsdlll" TargetType="{x:Type dg:DataGrid}">
        <Setter Property="Background" Value="{StaticResource MainBackgroundBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    </Style>
    <ControlTemplate x:Key="SelectAllButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle x:Name="Border"
                 Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                 SnapsToDevicePixels="True" />
            <Polygon x:Name="Arrow"
               HorizontalAlignment="Right"
               VerticalAlignment="Bottom"
               Margin="8,8,3,3"
               Opacity="0.15"
               Fill="Black"
               Stretch="Uniform"
               Points="0,10 10,10 10,0" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="dataGridControlTemplate" TargetType="{x:Type dg:DataGrid}">
        <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  SnapsToDevicePixels="True"
                  Padding="{TemplateBinding Padding}">
            <ScrollViewer   Focusable="false"
                            Name="DG_ScrollViewer">
                <ScrollViewer.Template>
                    <ControlTemplate  TargetType="{x:Type ScrollViewer}">
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!--Left Column Header Corner -->
                            <Button Command="{x:Static dg:DataGrid.SelectAllCommand}"
                            Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type dg:DataGrid}}, Path=CellsPanelHorizontalOffset}"
                            Template="{StaticResource SelectAllButtonTemplate}"
                            Focusable="false"
                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type dg:DataGrid}}, Path=HeadersVisibility, Converter={x:Static dg:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static dg:DataGridHeadersVisibility.All}}" />
                            <!--Column Headers-->
                            <dgp:DataGridColumnHeadersPresenter Grid.Column="1" 
                                                       Name="PART_ColumnHeadersPresenter"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type dg:DataGrid}}, Path=HeadersVisibility, Converter={x:Static dg:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static dg:DataGridHeadersVisibility.Column}}"/>

                            <!--DataGrid content-->
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" />

                            <ScrollBar Grid.Row="1" Grid.Column="2" x:Name="PART_VerticalScrollBar"
                                             Orientation="Vertical"
                                             Maximum="{TemplateBinding ScrollableHeight}"
                                             ViewportSize="{TemplateBinding ViewportHeight}"
                                             Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                            <Grid Grid.Row="2" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type dg:DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ScrollBar Grid.Column="1" x:Name="PART_HorizontalScrollBar"
                                 Orientation="Horizontal"
                                 Maximum="{TemplateBinding ScrollableWidth}"
                                 ViewportSize="{TemplateBinding ViewportWidth}"
                                 Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay }"
                                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </ScrollViewer.Template>

                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
        </Border>
    </ControlTemplate>

    <Style x:Key="{x:Type dg:DataGrid}" TargetType="{x:Type dg:DataGrid}">
        <Setter Property="Background" Value="{StaticResource MainBackgroundBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="Template" Value="{StaticResource dataGridControlTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <LinearGradientBrush x:Key="SelectedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#767474"/>
        <GradientStop Offset="1" Color="#A1A1A1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="RolloverBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FEB74B"/>
        <GradientStop Offset="1" Color="#F19201"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GlassBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0" Color="#66ffffff"/>
        <GradientStop Offset="0" Color="#36FFFFFF"/>
        <GradientStop Offset="1" Color="#B5EBE7E7"/>
    </LinearGradientBrush>

    <!-- styled to remove the standard blue selection colour and increase the padding -->
    <Style x:Key="{x:Type dg:DataGridCell}" TargetType="{x:Type dg:DataGridCell}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dg:DataGridCell}">
                    <Border Padding="5"  Background="{TemplateBinding Background}" 
                              BorderBrush="{TemplateBinding BorderBrush}"  
                              BorderThickness="{TemplateBinding BorderThickness}" 
                              SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static dg:DataGrid.FocusBorderBrushKey}}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{StaticResource SelectedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type dgp:DataGridColumnHeader}" TargetType="{x:Type dgp:DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type dgp:DataGridColumnHeader}">
                    <Grid>
                        <Border Name="MainBorder" BorderThickness="2,2,2,0" CornerRadius="2,2,1,1" Margin="0,0,1,0" BorderBrush="#5FACE7" Background="#2F73B2">
                            <Grid>
                                <!-- an overlayer glass effect -->
                                <Border VerticalAlignment="Top" Name="GradientBorder" Height="10" CornerRadius="1,1,1,0"  BorderBrush="#D99466" Background="{StaticResource GlassBrush}"/>
                                <ContentPresenter Margin="3" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </Grid>
                        </Border>

                        <Path Name="UpArrow" Fill="White" HorizontalAlignment="Right"
                                  VerticalAlignment="Center" Margin="0,2,7,0" Visibility="Hidden">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="7,0"/>
                                        <LineSegment Point="3.5,6"/>
                                        <LineSegment Point="0,0"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Path Name="DownArrow" Fill="White" HorizontalAlignment="Right"
                                  VerticalAlignment="Center" Margin="0,2,7,0" Visibility="Hidden">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,6">
                                        <LineSegment Point="7,6"/>
                                        <LineSegment Point="3.5,0"/>
                                        <LineSegment Point="0,6"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridColumnHeadersPresenter styled to remove the DataGridColumnHeader that spans the entire grid -->
    <Style x:Key="{x:Type dgp:DataGridColumnHeadersPresenter}" TargetType="{x:Type dgp:DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dgp:DataGridColumnHeadersPresenter}">
                    <Grid>

                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- style the expander toggle button -->
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Border Background="Black">
            <Path Name="Arrow" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- expander styled to give a full width header and to provide access to the toggle button -->
    <Style TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Name="ContentRow" Height="0"/>
                        </Grid.RowDefinitions>
                        <Border Name="Border" Grid.Row="0" Background="Black">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton IsChecked="{Binding Path=IsExpanded,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}" />
                                <ContentPresenter Grid.Column="1" Margin="4" ContentSource="Header" RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <Border Name="Content"  Grid.Row="1" Background="Transparent" BorderThickness="0">
                            <ContentPresenter Margin="3,0,0,0" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content, Path=DesiredHeight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderLeftGripperStyle" BasedOn="{StaticResource ColumnHeaderGripperStyle}"  TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" Name="Border">
                        <!--<Canvas>
                                <Line RenderOptions.EdgeMode="Aliased" X1="7" Y1="{Binding ElementName=Border, Path=ActualHeight}"
                                      X2="7" Y2="0" Stroke="DarkGray"/>
                            </Canvas>-->
                        <!--Left Column Header Corner -->

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="GroupContainerStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander IsExpanded="False">
                        <Expander.Header>
                            <DockPanel>
                                <TextBlock Text="{Binding Path=Name}"/>
                                    <TextBlock Text=" has "/>
                                    <TextBlock FontWeight="Bold" Text="{Binding Path=ItemCount}"/>
                                    <TextBlock Text=" photos"/>
                                </DockPanel>
                        </Expander.Header>
                        <ItemsPresenter />
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type dgp:DataGridRowHeader}">
        <Setter Property="Background" Value="#A1A1A1"/>
    </Style>

    <Color x:Key="NormalBrushGradient1">#FFF1BCBE</Color>
    <Color x:Key="NormalBrushGradient2">#FFCE6865</Color>
    <Color x:Key="NormalBrushGradient3">#FFAF231E</Color>
    <Color x:Key="NormalBrushGradient4">#FF601818</Color>

    <Color x:Key="NormalBorderBrushGradient1">#FFBBBBBB</Color>
    <Color x:Key="NormalBorderBrushGradient2">#FF737373</Color>
    <Color x:Key="NormalBorderBrushGradient3">#FF646464</Color>
    <Color x:Key="NormalBorderBrushGradient4">#FF000000</Color>

    <Color x:Key="SelectedBackgroundGradient1">#FFBBBBBB</Color>
    <Color x:Key="SelectedBackgroundGradient2">#FF737373</Color>
    <Color x:Key="SelectedBackgroundGradient3">#FF646464</Color>
    <Color x:Key="SelectedBackgroundGradient4">#FFA1A1A1</Color>

    <Color x:Key="SliderBorderGradient1">#FF3F3F3F</Color>
    <Color x:Key="SliderBorderGradient2">#FFADADAD</Color>

    <Color x:Key="ShadeBrushGradient1">#FF62676A</Color>
    <Color x:Key="ShadeBrushGradient2">#FFD1D4D6</Color>
    <Color x:Key="ShadeBrushGradient3">#FFFFFFFF</Color>

    <Color x:Key="WindowBackgroundBrushGradient1">#FFD1D1D1</Color>
    <Color x:Key="WindowBackgroundBrushGradient2">#FF8496AA</Color>



    <LinearGradientBrush x:Key="DisabledBackgroundBrush1"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" />
        <GradientStop Color="#FF62676A"
                  Offset="1" />
        <GradientStop Color="#FFD1D4D6"
                  Offset="0.41800001263618469" />
        <GradientStop Color="#FFA9AFB5"
                  Offset="0.425" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SelectedBackgroundBrush1"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
        <GradientStop Color="{StaticResource SelectedBackgroundGradient1}" />
        <GradientStop Color="{StaticResource SelectedBackgroundGradient2}"
                  Offset="0.38" />
        <GradientStop Color="{StaticResource SelectedBackgroundGradient3}"
                  Offset="0.384" />
        <GradientStop Color="{StaticResource SelectedBackgroundGradient4}"
                  Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SelectedBackgroundBrushVertical1"
                       EndPoint="2.05,0.5"
                       StartPoint="-0.55,0.5">
        <GradientStop Color="{StaticResource SelectedBackgroundGradient1}" />
        <GradientStop Color="{StaticResource SelectedBackgroundGradient2}"
                  Offset="0.37999999523162842" />
        <GradientStop Color="{StaticResource SelectedBackgroundGradient3}"
                  Offset="0.38400000333786011" />
        <GradientStop Color="{StaticResource SelectedBackgroundGradient4}"
                  Offset="1" />
    </LinearGradientBrush>

    <Color x:Key="BlackColor">#FF000000</Color>

    <Style TargetType="{x:Type TabControl}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="2,2,0,0" Background="{DynamicResource LightBrush}" x:Name="border">
                            <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                <TabPanel.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.LayoutTransform>
                                <TabPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.RenderTransform>

                            </TabPanel>
                        </Border>
                        <Border x:Name="ContentPanel" Grid.Column="0" Grid.Row="1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" Background="{DynamicResource ShadeBrush}" CornerRadius="0,0,2,2">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                        </Border>
                        <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" BorderThickness="0,0,0,1" CornerRadius="10,0,0,0" Opacity="0.5" Margin="2,0,2,0" x:Name="border1">
                            <Border.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Border.LayoutTransform>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BlackColor}"/>
                            </Border.BorderBrush>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Grid.Row" TargetName="border" Value="1"/>
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,2,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="0"/>
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,0"/>
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0"/>
                            <Setter Property="LayoutTransform" TargetName="border1">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="border1" Value="0,0,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0"/>
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="0,2,2,0"/>

                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="1"/>
                            <Setter Property="LayoutTransform" TargetName="border1">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="border1" Value="1"/>
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2"/>
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--MainBackgroundBrush-->

    <Style d:IsControlPart="True" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Border x:Name="border" BorderBrush="{x:Null}" CornerRadius="2,2,2,2" Opacity="0.5">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.976" StartPoint="0.5,0.039">
                                    <GradientStop Color="{StaticResource WindowBackgroundBrushGradient1}" Offset="0" />
                                    <GradientStop Color="{StaticResource WindowBackgroundBrushGradient2}" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="SelectedBorder" BorderBrush="{x:Null}" CornerRadius="2,2,2,2" Opacity="0" Background="{DynamicResource groundBrush}"/>
                        <Border x:Name="HoverBorder" BorderBrush="{x:Null}" CornerRadius="2,2,2,2" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.976" StartPoint="0.5,0.039">
                                    <GradientStop Color="#FFF95959" Offset="0" />
                                    <GradientStop Color="#198FFFFF" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Grid>
                            <ContentPresenter x:Name="ContentSite" 
                                              RecognizesAccessKey="True" 
                                              ContentSource="Header" 
                                              d:LayoutOverrides="Width, Height" 
                                              HorizontalAlignment="Center"
                                              Margin="6,1,6,1" 
                                              VerticalAlignment="Center" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" 
                                                 x:Name="HoverOff_BeginStoryboard"/>
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard"/>
                            </Trigger.EnterActions>
                            <Setter Property="Panel.ZIndex" Value="100" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="grid" />
                                <Condition Property="Selector.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" 
                                    Value="{DynamicResource SelectedBackgroundBrush1}" />
                            <Setter Property="Opacity" TargetName="border" Value="0.9" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" 
                                    Value="blue" />
                            <Setter Property="Background" TargetName="border" 
                                    Value="{DynamicResource DisabledBackgroundBrush1}"/>
                            <Setter Property="Opacity" TargetName="grid" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" >
                    <Setter.Value>
                        <SolidColorBrush Color="Black"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <SolidColorBrush x:Key="OutsideFontColor" Color="#FF000000" />

    <LinearGradientBrush x:Key="ControlBackgroundBrush" EndPoint="0,1"
                             StartPoint="0,0">
        <GradientStop Color="#FFF"
                        Offset="0.0" />
        <GradientStop Color="#AAA"
                        Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlBorderBrush" Color="#FFB1703C"/>
    <SolidColorBrush x:Key="FocusBrush" Color="#FFE99862"/>

    <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" Offset="0" />
        <GradientStop Color="#FFFEF3B5" Offset="0.318" />
        <GradientStop Color="#FFFFEB70" Offset="0.488" />
        <GradientStop Color="#FFFFD02E" Offset="0.502" />
        <GradientStop Color="#FFFFD932" Offset="0.834" />
        <GradientStop Color="#FFFFF48B" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MouseOverBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFEEE8CF" Offset="0" />
        <GradientStop Color="#FFC4AF8C" Offset="0.536" />
        <GradientStop Color="#FFDCD1BF" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MouseOverHighlightBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFB" Offset="0" />
        <GradientStop Color="#FFFEF3B5" Offset="1" />
    </LinearGradientBrush>
    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource OutsideFontColor}" />
        <Setter Property="FontFamily" Value="Trebuchet MS" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="2" Background="{TemplateBinding Background}">
                            <ScrollViewer Focusable="False" Background="{TemplateBinding Background}" 
                                          Padding="4" HorizontalScrollBarVisibility="Auto" 
                                          VerticalScrollBarVisibility="Auto" 
                                          CanContentScroll="False">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearTreeViewItemToggleButton" d:IsControlPart="True" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FFFFCB66" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#FFFFCB66" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FFFFCB66" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#FFFFCB66" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FF9EC6FB" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#FF9EC6FB" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#FFE56E17" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#FFE56E17" />
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimation Duration="0" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimation Duration="0" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid HorizontalAlignment="Right" Margin="2,2,5,2">
                        <Path x:Name="UncheckedVisual" Height="9" Width="6" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="#FF9EC6FB" Stroke="#FF9EC6FB" StrokeLineJoin="Miter" Data="M 0,0 L 0,9 L 5,4.5 Z" />
                        <Path x:Name="CheckedVisual" Height="6" Width="6" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="#FFE56E17" Stroke="#FFE56E17" StrokeLineJoin="Miter" Opacity="0" Data="M 6,0 L 6,6 L 0,6 Z" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" x:Name="CheckedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" x:Name="CheckedOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style d:IsControlPart="True" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="5,3,15,3" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="select_gradient" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="select_gradient" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="hover_gradient" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.85" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.65" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="hover_gradient" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="InactiveOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="inactive" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="InactiveOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="inactive" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" Style="{DynamicResource NuclearTreeViewItemToggleButton}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />

                        <Rectangle x:Name="select_gradient" Grid.Column="1" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" IsHitTestVisible="False" Fill="{DynamicResource PressedBrush}" Stroke="{DynamicResource PressedBorderBrush}"/>
                        <Rectangle x:Name="inactive" Grid.Column="1" Fill="#FF999999" Stroke="#FF333333" StrokeThickness="1" RadiusX="2" RadiusY="2" Opacity="0" IsHitTestVisible="False" />

                        <Rectangle x:Name="hover_gradient" Stroke="{DynamicResource FocusBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" IsHitTestVisible="False" Grid.Column="1" Fill="{DynamicResource MouseOverBrush}"/>
                        <Rectangle x:Name="highlight" Margin="1" StrokeThickness="1" RadiusX="0.5" RadiusY="0.5" Opacity="0" IsHitTestVisible="False" Grid.Column="1" Stroke="{DynamicResource MouseOverHighlightBrush}"/>

                        <Border Grid.Column="1" x:Name="Selection_Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" ContentSource="Header" />
                        </Border>
                        <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="Selection_Border">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Expander" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource InactiveOff}" x:Name="InactiveOff_BeginStoryboard" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource InactiveOn}" x:Name="InactiveOn_BeginStoryboard" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ScrollBarRepeatButtonBrush" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="#FFF1F6FE" Offset="0.5" />
        <GradientStop Color="#FFC7D9F1" Offset="0.513" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBarRepeatButtonBorderBrush" Color="#FF8C97A5"/>
    <LinearGradientBrush x:Key="ScrollBarRepeatButtonPressedBrush" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="#FFF1F6FE" Offset="0.5" />
        <GradientStop Color="#FFD1D6DD" Offset="0.513" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBarRepeatButtonPressedBorderBrush" Color="#FF19598A"/>

    <Style  TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="blue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="Background"  RadiusX="0.5" RadiusY="0.5" StrokeThickness="1" Stroke="{DynamicResource MainBackgroundBrush}" Opacity="0" Fill="{DynamicResource MainBackgroundBrush}"/>
                        <Rectangle x:Name="BackgroundPressed" RadiusX="0.5" RadiusY="0.5" StrokeThickness="1" Stroke="{DynamicResource ScrollBarRepeatButtonPressedBorderBrush}" Opacity="0" Fill="{DynamicResource ScrollBarRepeatButtonPressedBrush}"/>
                        <Rectangle x:Name="Highlight" Margin="1" RadiusX="0.5" RadiusY="0.5" Stroke="#99FFFFFF" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                        <Rectangle x:Name="DisabledElement" RadiusX="0" RadiusY="0" Fill="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />
                        <ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">

                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="ContentPresenter" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate 

        x:Key="TimePickerButtonTemplate"

        TargetType="ButtonBase">

        <Border

            x:Name="ContentContainer" 

            Background="{TemplateBinding Background}" 

            BorderBrush="{TemplateBinding BorderBrush}" 

            BorderThickness="1" 

            SnapsToDevicePixels="True">

            <ContentPresenter 

                 x:Name="Content"

                 RecognizesAccessKey="True" 

                 Content="{TemplateBinding Content}"

                 ContentTemplate="{TemplateBinding ContentTemplate}"

                 ContentStringFormat="{TemplateBinding ContentStringFormat}" 

                 Margin="{TemplateBinding Padding}" 

                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 

                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 

                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

        </Border>

        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">

                <Setter 

                 TargetName="ContentContainer"

                 Property="Background"

                 Value="LightBlue">

                </Setter>

            </Trigger>

            <Trigger Property="Button.IsDefaulted" Value="True">

                <Setter 

                 TargetName="ContentContainer"

                 Property="Background"

                 Value="LightBlue">

                </Setter>

            </Trigger>

            <Trigger Property="ButtonBase.IsPressed" Value="True">

                <Setter 

                 TargetName="Content" 

                 Property="RenderTransform">

                    <Setter.Value>

                        <TranslateTransform Y="0.5"/>

                    </Setter.Value>

                </Setter>

            </Trigger>

            <Trigger Property="ToggleButton.IsChecked" Value="True">

                <Setter 

                 TargetName="Content" 

                 Property="RenderTransform">

                    <Setter.Value>

                        <TranslateTransform Y="0.5"/>

                    </Setter.Value>

                </Setter>

            </Trigger>

            <Trigger Property="UIElement.IsEnabled" Value="False">

                <Setter Property="TextElement.Foreground">

                    <Setter.Value>

                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />

                    </Setter.Value>

                </Setter>

            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>


    <Style x:Key="{x:Type dx:TimePicker}" TargetType="{x:Type dx:TimePicker}">

        <Setter Property="Width" Value="150"/>

        <Setter Property="Height" Value="23"/>

        <Setter Property="BorderBrush" Value="Black"/>

        <Setter Property="BorderThickness" Value="0.5"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type dx:TimePicker}">

                    <Border 

                     Background="{TemplateBinding Background}"

                     BorderBrush="{TemplateBinding BorderBrush}"

                     BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid>

                            <Grid.ColumnDefinitions>

                                <ColumnDefinition Width="*"/>

                                <ColumnDefinition Width="Auto"/>

                            </Grid.ColumnDefinitions>


                            <StackPanel 

                              Orientation="Horizontal"

                              DataContext="{TemplateBinding dx:TimePicker.SelectedTime}">

                                <TextBox

                                  x:Name="PART_HourTextBox"

                                  Text="{Binding Hours, Mode=OneWay, StringFormat=00}"

                                  BorderBrush="{x:Null}"

                                  Width="23"/>

                                <TextBlock

                                  Text=":"

                                  VerticalAlignment="Center"/>

                              <TextBox

                                  x:Name="PART_MinuteTextBox"

                                  Text="{Binding Minutes, Mode=OneWay, StringFormat=00}"

                                  BorderBrush="{x:Null}"

                                  Width="23"/>

                              <TextBlock

                                  Text=":"

                                  VerticalAlignment="Center"/>

                              <TextBox

                                  x:Name="PART_SecondTextBox"

                                  Text="{Binding Seconds, Mode=OneWay, StringFormat=00}"

                                  BorderBrush="{x:Null}"
                                 
                                  Width="23"/>

                         </StackPanel>


                            <Grid

                              Grid.Column="1">

                                <Grid.RowDefinitions>

                                    <RowDefinition Height="*"/>

                                    <RowDefinition Height="*"/>

                                </Grid.RowDefinitions>


                                <RepeatButton 

                                  x:Name="PART_IncrementButton"

                                  Margin="1,1,1,0"

                                  Width="20"

                                  Template="{StaticResource TimePickerButtonTemplate}">
                                    <TextBlock 

                                      Text="p" 

                                      FontFamily="Wingdings 3"

                                      FontSize="6"

                                      HorizontalAlignment="Center"

                                      VerticalAlignment="Center"/>

                              </RepeatButton>


                                <RepeatButton

                                  x:Name="PART_DecrementButton"

                                  Grid.Row="1"

                                  Margin="1,1,1,1"

                                  Width="20"

                                  Template="{StaticResource TimePickerButtonTemplate}">

                                    <TextBlock 

                                      Text="q" 

                                      FontFamily="Wingdings 3"

                                      FontSize="6"

                                      HorizontalAlignment="Center"

                                      VerticalAlignment="Center"/>

                              </RepeatButton>

                            </Grid>

                        </Grid>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <Style TargetType="{x:Type ListView}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="Trebuchet MS" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="#FFB1703C" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="1.204,0.5" StartPoint="0.056,0.5">
                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                <GradientStop Color="#FFD4D7DB" Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>

                        <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="#8E6EA6F5" StrokeThickness="1" RadiusX="2" RadiusY="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="5,2,5,2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0.73" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0.84" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity" To="0.55" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" x:Name="border">

                        <Grid Margin="2,0,2,0">
                            <Rectangle x:Name="BackgroundGradientOver" RadiusX="1" RadiusY="1" Stroke="{DynamicResource MouseOverBorderBrush}" Opacity="0" Fill="{DynamicResource MouseOverBrush}"/>
                            <Rectangle x:Name="BackgroundGradientSelectedDisabled" RadiusX="1" RadiusY="1" Opacity="0" Fill="{DynamicResource ListItemSelectedBrush}" Stroke="{DynamicResource ListItemSelectedBorderBrush}"/>
                            <Rectangle x:Name="BackgroundGradientSelected" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" Fill="{DynamicResource PressedBrush}" Stroke="{DynamicResource PressedBorderBrush}"/>
                            <GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,2,0,2" VerticalAlignment="Stretch" />
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>

                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource OutsideFontColor}" />
    </Style>

    <Color x:Key="Arrow">#FF425080</Color>
    <SolidColorBrush x:Key="OutsideFontColor1" Color="#FFFFFFFF" />
    <Color x:Key="TextboxOver1">#FF5296BD</Color>
    <Color x:Key="TextboxOver2">#FFC2E4F6</Color>
    <Color x:Key="TextboxPress1">#FF3B79AC</Color>
    <Color x:Key="TextboxPress2">#FFB2DBED</Color>
    <Color x:Key="CheckInnerOver">#FF79C6F9</Color>
    <Color x:Key="CheckInnerOver2">#FFAFDEFD</Color>
    <Color x:Key="CheckInnerPress">#FF5EB6F7</Color>
    <Color x:Key="CheckInnerPress2">#FF90CFFC</Color>
    <Color x:Key="CheckOutterOver">#FF5989A5</Color>
    <Color x:Key="CheckOutterOver2">#FFDEF9FA</Color>
    <Color x:Key="RadioStroke">#FF275674</Color>
    <Color x:Key="ItemOver2">#FFCFEDFD</Color>
    <Color x:Key="Over2">#FFC0E7FC</Color>
    <Color x:Key="PressStroke2">#FF2C628B</Color>
    <Color x:Key="Focus">#FF04CCFF</Color>
    <!-- Radio/Checkbox specific resources -->
    <SolidColorBrush x:Key="checkOverStroke" Color="{StaticResource CheckOutterOver}"/>
    <SolidColorBrush x:Key="checkOverFill" Color="{StaticResource CheckOutterOver2}"/>
    <SolidColorBrush x:Key="checkPressFill" Color="{StaticResource TextboxOver2}"/>
    <SolidColorBrush x:Key="checkInnerOverFill" Color="{StaticResource CheckInnerOver2}"/>
    <SolidColorBrush x:Key="checkInnerPressFill" Color="{StaticResource CheckInnerPress2}"/>
    <SolidColorBrush x:Key="checkIconStroke" Color="{StaticResource Arrow}"/>
    <SolidColorBrush x:Key="radioIconStroke" Color="{StaticResource RadioStroke}"/>
    <LinearGradientBrush x:Key="checkInnerOverStroke" EndPoint="0.8,0.8" StartPoint="0.3,0.3">
        <GradientStop Color="{StaticResource CheckInnerOver}" Offset="0"/>
        <GradientStop Color="{StaticResource ItemOver2}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="checkInnerPressStroke" EndPoint="0.8,0.8" StartPoint="0.3,0.3">
        <GradientStop Color="{StaticResource CheckInnerPress}" Offset="0"/>
        <GradientStop Color="{StaticResource Over2}" Offset="1"/>
    </LinearGradientBrush>
    <!-- Communal Static Resources -->
    <SolidColorBrush x:Key="btnFocus" Color="{StaticResource Focus}"/>
    <SolidColorBrush x:Key="btnPressStroke2" Color="{StaticResource PressStroke2}"/>
    <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>
        <Setter Property="Foreground" Value="{StaticResource OutsideFontColor1}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background_Over" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BoxOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background_Over" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BoxOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BoxPress" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background_Press" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background_Press" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BoxPress" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IndeterminateOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IndeterminateOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Rectangle x:Name="Background" Margin="1" Width="13" Height="13" Fill="#FFF4F4F4" Stroke="#FF868686" StrokeThickness="1" />
                                <Rectangle x:Name="Background_Over" Width="13" Height="13" Fill="{StaticResource checkOverFill}" Stroke="{StaticResource checkOverStroke}" StrokeThickness="1" Opacity="0"/>
                                <Rectangle x:Name="Background_Press" Width="13" Height="13" Fill="{StaticResource checkPressFill}" Stroke="{StaticResource btnPressStroke2}" StrokeThickness="1" Opacity="0"/>
                                <Rectangle x:Name="BoxFill" Width="9" Height="9" Fill="#FFCACFD5" StrokeThickness="1">
                                    <Rectangle.Stroke>
                                        <LinearGradientBrush EndPoint="0.8,0.8" StartPoint="0.3,0.3">
                                            <GradientStop Color="#FFB3B8BD"/>
                                            <GradientStop Color="#FFE0E0E0" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <Rectangle x:Name="BoxOver" Margin="3" Width="9" Height="9" Fill="{StaticResource checkInnerOverFill}" Stroke="{StaticResource checkInnerOverStroke}" StrokeThickness="1" Opacity="0"/>
                                <Rectangle x:Name="BoxPress" Width="9" Height="9" Fill="{StaticResource checkInnerPressFill}" Stroke="{StaticResource checkInnerPressStroke}" StrokeThickness="1" Opacity="0" />
                                <Rectangle x:Name="BoxGradient" Width="7" Height="7" StrokeThickness="1">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.238,0.228" EndPoint="0.752,0.749">
                                            <GradientStop Color="#00F6F6F6" Offset="0.254" />
                                            <GradientStop Color="#53F8F8F8" Offset="0.54"/>
                                            <GradientStop Color="#BFFFFFFF" Offset="0.996"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="IndeterminateIcon" Width="5" Height="2" Fill="{StaticResource checkIconStroke}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Path x:Name="CheckIcon" Margin="0,3.333,3.833,0" Width="7" Height="9" Fill="{StaticResource checkIconStroke}" Stretch="Fill" Opacity="0" VerticalAlignment="Top" HorizontalAlignment="Right" Data="M103.78572,598.96112 L105.09846,597.5661 L107.00806,600.16229 C107.00806,600.16229 109.91004,592.74463 109.91004,592.74463 C109.91004,592.74463 111.74678,593.79761 111.74678,593.79761 C111.74678,593.79761 107.88566,602.75848 107.88566,602.75848 L106.60118,602.75848 z"/>
                                <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource btnFocus}" StrokeThickness="1" Visibility="Visible" Opacity="0"/>
                                <Rectangle x:Name="DisabledVisualElement" Margin="1" Fill="#4CFFFFFF" Visibility="Collapsed"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.ExitActions>

                                <BeginStoryboard Storyboard="{StaticResource FocusedOff}" x:Name="FocusedOff_BeginStoryboard"/>

                            </Trigger.ExitActions>
                            <Trigger.EnterActions>

                                <BeginStoryboard Storyboard="{StaticResource FocusedOn}" x:Name="FocusedOn_BeginStoryboard"/>

                            </Trigger.EnterActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsThreeState" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>

                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" x:Name="CheckedOn_BeginStoryboard"/>

                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>

                                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" x:Name="CheckedOff_BeginStoryboard"/>

                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="{x:Null}" />
                                <Condition Property="IsThreeState" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>

                                <BeginStoryboard Storyboard="{StaticResource IndeterminateOn}" x:Name="IndeterminateOn_BeginStoryboard"/>

                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>

                                <BeginStoryboard Storyboard="{StaticResource IndeterminateOff}" x:Name="IndeterminateOff_BeginStoryboard"/>

                            </MultiTrigger.ExitActions>
                            <Setter Property="Opacity" TargetName="CheckIcon" Value="0"/>
                            <Setter Property="Visibility" TargetName="CheckIcon" Value="Collapsed"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" x:Name="CheckedOn_BeginStoryboard1"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" x:Name="CheckedOff_BeginStoryboard1"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">

                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                            <Setter Property="Visibility" TargetName="DisabledVisualElement" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type dx:CheckBoxExtend}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>
        <Setter Property="Foreground" Value="{StaticResource OutsideFontColor1}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background_Over" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BoxOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background_Over" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BoxOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BoxPress" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background_Press" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Background_Press" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BoxPress" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IndeterminateOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IndeterminateOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Rectangle x:Name="Background" Margin="1" Width="13" Height="13" Fill="#FFF4F4F4" Stroke="#FF868686" StrokeThickness="1" />
                                <Rectangle x:Name="Background_Over" Width="13" Height="13" Fill="{StaticResource checkOverFill}" Stroke="{StaticResource checkOverStroke}" StrokeThickness="1" Opacity="0"/>
                                <Rectangle x:Name="Background_Press" Width="13" Height="13" Fill="{StaticResource checkPressFill}" Stroke="{StaticResource btnPressStroke2}" StrokeThickness="1" Opacity="0"/>
                                <Rectangle x:Name="BoxFill" Width="9" Height="9" Fill="#FFCACFD5" StrokeThickness="1">
                                    <Rectangle.Stroke>
                                        <LinearGradientBrush EndPoint="0.8,0.8" StartPoint="0.3,0.3">
                                            <GradientStop Color="#FFB3B8BD"/>
                                            <GradientStop Color="#FFE0E0E0" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <Rectangle x:Name="BoxOver" Margin="3" Width="9" Height="9" Fill="{StaticResource checkInnerOverFill}" Stroke="{StaticResource checkInnerOverStroke}" StrokeThickness="1" Opacity="0"/>
                                <Rectangle x:Name="BoxPress" Width="9" Height="9" Fill="{StaticResource checkInnerPressFill}" Stroke="{StaticResource checkInnerPressStroke}" StrokeThickness="1" Opacity="0" />
                                <Rectangle x:Name="BoxGradient" Width="7" Height="7" StrokeThickness="1">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.238,0.228" EndPoint="0.752,0.749">
                                            <GradientStop Color="#00F6F6F6" Offset="0.254" />
                                            <GradientStop Color="#53F8F8F8" Offset="0.54"/>
                                            <GradientStop Color="#BFFFFFFF" Offset="0.996"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="IndeterminateIcon" Width="5" Height="2" Fill="{StaticResource checkIconStroke}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Path x:Name="CheckIcon" Margin="0,3.333,3.833,0" Width="7" Height="9" Fill="{StaticResource checkIconStroke}" Stretch="Fill" Opacity="0" VerticalAlignment="Top" HorizontalAlignment="Right" Data="M103.78572,598.96112 L105.09846,597.5661 L107.00806,600.16229 C107.00806,600.16229 109.91004,592.74463 109.91004,592.74463 C109.91004,592.74463 111.74678,593.79761 111.74678,593.79761 C111.74678,593.79761 107.88566,602.75848 107.88566,602.75848 L106.60118,602.75848 z"/>
                                <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource btnFocus}" StrokeThickness="1" Visibility="Visible" Opacity="0"/>
                                <Rectangle x:Name="DisabledVisualElement" Margin="1" Fill="#4CFFFFFF" Visibility="Collapsed"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.ExitActions>

                                <BeginStoryboard Storyboard="{StaticResource FocusedOff}" x:Name="FocusedOff_BeginStoryboard"/>

                            </Trigger.ExitActions>
                            <Trigger.EnterActions>

                                <BeginStoryboard Storyboard="{StaticResource FocusedOn}" x:Name="FocusedOn_BeginStoryboard"/>

                            </Trigger.EnterActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsThreeState" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>

                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" x:Name="CheckedOn_BeginStoryboard"/>

                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>

                                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" x:Name="CheckedOff_BeginStoryboard"/>

                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="{x:Null}" />
                                <Condition Property="IsThreeState" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>

                                <BeginStoryboard Storyboard="{StaticResource IndeterminateOn}" x:Name="IndeterminateOn_BeginStoryboard"/>

                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>

                                <BeginStoryboard Storyboard="{StaticResource IndeterminateOff}" x:Name="IndeterminateOff_BeginStoryboard"/>

                            </MultiTrigger.ExitActions>
                            <Setter Property="Opacity" TargetName="CheckIcon" Value="0"/>
                            <Setter Property="Visibility" TargetName="CheckIcon" Value="Collapsed"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" x:Name="CheckedOn_BeginStoryboard1"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" x:Name="CheckedOff_BeginStoryboard1"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">

                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                            <Setter Property="Visibility" TargetName="DisabledVisualElement" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--65%-->
    <Color x:Key="RadioIcon1">#FF90D5E5</Color>
    <Color x:Key="RadioIcon2">#FF28A2D1</Color>
    <Color x:Key="RadioIcon3">#FF1898D1</Color>
    <Color x:Key="RadioIcon4">#FF0F83C7</Color>
    <Color x:Key="RadioIconOver1">#FF1EBEFF</Color>
    <Color x:Key="RadioIconOver2">#FF13A2F3</Color>
    <Color x:Key="RadioIconPress1">#99759FB6</Color>
    <!--Press1, 60%-->
    <Color x:Key="RadioIconPress2">#FF4B8DAF</Color>

    <Color x:Key="PressHighlight">#FF387599</Color>
    <LinearGradientBrush x:Key="radioIconFill" EndPoint="0.8,0.8" StartPoint="0.3,0.3">
        <GradientStop Color="{StaticResource RadioIcon1}" Offset="0"/>
        <GradientStop Color="{StaticResource RadioIcon2}" Offset="0.179"/>
        <GradientStop Color="{StaticResource RadioIcon3}" Offset="0.496"/>
        <GradientStop Color="{StaticResource RadioIcon4}" Offset="0.812"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="radioIconFillOver" EndPoint="0.8,0.8" StartPoint="0.3,0.3">
        <GradientStop Color="{StaticResource Over2}" Offset="0"/>
        <GradientStop Color="{StaticResource Focus}" Offset="0.179"/>
        <GradientStop Color="{StaticResource RadioIconOver1}" Offset="0.496"/>
        <GradientStop Color="{StaticResource RadioIconOver2}" Offset="0.812"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="radioIconFillPress" EndPoint="0.8,0.8" StartPoint="0.3,0.3">
        <GradientStop Color="{StaticResource RadioIconPress1}" Offset="0"/>
        <GradientStop Color="{StaticResource RadioIconPress2}" Offset="0.317"/>
        <GradientStop Color="{StaticResource PressHighlight}" Offset="0.504"/>
        <GradientStop Color="{StaticResource PressStroke2}" Offset="0.817"/>
    </LinearGradientBrush>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}"/>
        <Setter Property="Foreground" Value="{StaticResource OutsideFontColor1}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPress" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="CircleFillPress" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="CircleIconPress" Storyboard.TargetProperty="Opacity" To="1"/>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPress" Storyboard.TargetProperty="Opacity" To="0"/>
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="CircleFillPress" Storyboard.TargetProperty="Opacity" To="0"/>
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="CircleIconPress" Storyboard.TargetProperty="Opacity" To="0"/>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIconOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleIconPress" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>


                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIconOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleIconPress" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>


                        </Storyboard>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Ellipse x:Name="Background" Width="14" Height="14" Fill="#FFF4F4F4" Stroke="#FF6F6F6F" StrokeThickness="1"/>
                                <Ellipse x:Name="BackgroundOver" Width="14" Height="14" Fill="{StaticResource checkOverFill}" Stroke="{StaticResource checkOverStroke}" StrokeThickness="1" Opacity="0"/>
                                <Ellipse x:Name="BackgroundPress" Width="14" Height="14" Fill="{StaticResource checkPressFill}" Stroke="{StaticResource btnPressStroke2}" StrokeThickness="1" Opacity="0"/>
                                <Ellipse x:Name="CircleFill" Margin="2" Fill="#FFCACFD5" StrokeThickness="1">
                                    <Ellipse.Stroke>
                                        <LinearGradientBrush EndPoint="0.8,0.8" StartPoint="0.3,0.3">
                                            <GradientStop Color="#FFB3B8BD" Offset="0"/>
                                            <GradientStop Color="#FFE0E0E0" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Ellipse.Stroke>
                                </Ellipse>
                                <Ellipse x:Name="CircleOver" Margin="2" Fill="{StaticResource checkInnerOverFill}" Stroke="{StaticResource checkInnerOverStroke}" StrokeThickness="1" Opacity="0"/>
                                <Ellipse x:Name="CircleFillPress" Margin="2" Fill="{StaticResource checkInnerPressFill}" Stroke="{StaticResource checkInnerPressStroke}" StrokeThickness="1" Opacity="0" Visibility="Visible"/>
                                <Ellipse x:Name="CircleGradient" Margin="3" StrokeThickness="1">
                                    <Ellipse.Fill>
                                        <LinearGradientBrush EndPoint="0.8,0.8" StartPoint="0.3,0.3">
                                            <GradientStop Color="#00F6F6F6" Offset="0"/>
                                            <GradientStop Color="#53F8F8F8" Offset="0.3"/>
                                            <GradientStop Color="#BFFFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="CircleIcon" Margin="3" Fill="{StaticResource radioIconFill}" Stroke="{StaticResource radioIconStroke}" StrokeThickness="1.25" Opacity="0"/>
                                <Ellipse x:Name="CheckIconOver" Margin="3" Fill="{StaticResource radioIconFillOver}" Stroke="{StaticResource radioIconStroke}" StrokeThickness="1.25" Opacity="0"/>
                                <Ellipse x:Name="CircleIconPress" Margin="3" Fill="{StaticResource radioIconFillPress}" Stroke="{StaticResource radioIconStroke}" StrokeThickness="1.25" Opacity="0"/>
                                <Ellipse x:Name="DisabledVisualElement" Width="14" Height="14" Fill="#FFFFFFFF" Stroke="#FFFFFFFF" Opacity="0.35" Visibility="Collapsed"/>
                                <Ellipse x:Name="FocusedVisualElement" Margin="-1" Width="16" Height="16" Stroke="{StaticResource btnFocus}" StrokeThickness="1" IsHitTestVisible="false" Opacity="0" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOff}" x:Name="FocusedOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOn}" x:Name="FocusedOn_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">

                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}"/>
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">

                            <Setter Property="Foreground" Value="#80000000"/>
                            <Setter Property="Visibility" TargetName="DisabledVisualElement" Value="Visible"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type dx:RiadioButtonExtend }">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}"/>
        <Setter Property="Foreground" Value="{StaticResource OutsideFontColor1}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dx:RiadioButtonExtend}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPress" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="CircleFillPress" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="CircleIconPress" Storyboard.TargetProperty="Opacity" To="1"/>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPress" Storyboard.TargetProperty="Opacity" To="0"/>
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="CircleFillPress" Storyboard.TargetProperty="Opacity" To="0"/>
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="CircleIconPress" Storyboard.TargetProperty="Opacity" To="0"/>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIconOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleIconPress" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>


                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckIconOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CircleIconPress" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>


                        </Storyboard>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Ellipse x:Name="Background" Width="14" Height="14" Fill="#FFF4F4F4" Stroke="#FF6F6F6F" StrokeThickness="1"/>
                                <Ellipse x:Name="BackgroundOver" Width="14" Height="14" Fill="{StaticResource checkOverFill}" Stroke="{StaticResource checkOverStroke}" StrokeThickness="1" Opacity="0"/>
                                <Ellipse x:Name="BackgroundPress" Width="14" Height="14" Fill="{StaticResource checkPressFill}" Stroke="{StaticResource btnPressStroke2}" StrokeThickness="1" Opacity="0"/>
                                <Ellipse x:Name="CircleFill" Margin="2" Fill="#FFCACFD5" StrokeThickness="1">
                                    <Ellipse.Stroke>
                                        <LinearGradientBrush EndPoint="0.8,0.8" StartPoint="0.3,0.3">
                                            <GradientStop Color="#FFB3B8BD" Offset="0"/>
                                            <GradientStop Color="#FFE0E0E0" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Ellipse.Stroke>
                                </Ellipse>
                                <Ellipse x:Name="CircleOver" Margin="2" Fill="{StaticResource checkInnerOverFill}" Stroke="{StaticResource checkInnerOverStroke}" StrokeThickness="1" Opacity="0"/>
                                <Ellipse x:Name="CircleFillPress" Margin="2" Fill="{StaticResource checkInnerPressFill}" Stroke="{StaticResource checkInnerPressStroke}" StrokeThickness="1" Opacity="0" Visibility="Visible"/>
                                <Ellipse x:Name="CircleGradient" Margin="3" StrokeThickness="1">
                                    <Ellipse.Fill>
                                        <LinearGradientBrush EndPoint="0.8,0.8" StartPoint="0.3,0.3">
                                            <GradientStop Color="#00F6F6F6" Offset="0"/>
                                            <GradientStop Color="#53F8F8F8" Offset="0.3"/>
                                            <GradientStop Color="#BFFFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="CircleIcon" Margin="3" Fill="{StaticResource radioIconFill}" Stroke="{StaticResource radioIconStroke}" StrokeThickness="1.25" Opacity="0"/>
                                <Ellipse x:Name="CheckIconOver" Margin="3" Fill="{StaticResource radioIconFillOver}" Stroke="{StaticResource radioIconStroke}" StrokeThickness="1.25" Opacity="0"/>
                                <Ellipse x:Name="CircleIconPress" Margin="3" Fill="{StaticResource radioIconFillPress}" Stroke="{StaticResource radioIconStroke}" StrokeThickness="1.25" Opacity="0"/>
                                <Ellipse x:Name="DisabledVisualElement" Width="14" Height="14" Fill="#FFFFFFFF" Stroke="#FFFFFFFF" Opacity="0.35" Visibility="Collapsed"/>
                                <Ellipse x:Name="FocusedVisualElement" Margin="-1" Width="16" Height="16" Stroke="{StaticResource btnFocus}" StrokeThickness="1" IsHitTestVisible="false" Opacity="0" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOff}" x:Name="FocusedOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOn}" x:Name="FocusedOn_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">

                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}"/>
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">

                            <Setter Property="Foreground" Value="#80000000"/>
                            <Setter Property="Visibility" TargetName="DisabledVisualElement" Value="Visible"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" />
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" />
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Background" Value="{StaticResource MainBackgroundBrush}" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Background="{DynamicResource MainBackgroundBrush}" />
                        <ScrollViewer Margin="1" Style="{DynamicResource NuclearScrollViewer}" Focusable="false" Background="{x:Null}">
                            <StackPanel Margin="1,1,1,1" IsItemsHost="true" />
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TextBrush" Color="#FFFFFFFF" />
    <LinearGradientBrush x:Key="HoverShineBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
        <GradientStop Color="#4CFFFFFF" Offset="0" />
        <GradientStop Color="#26FFFFFF" Offset="1" />
        <GradientStop Color="#26FFFFFF" Offset="0.467" />
        <GradientStop Color="#00FFFFFF" Offset="0.475" />
        <GradientStop Color="#00FFFFFF" Offset="0.856" />
    </LinearGradientBrush>
    <Color x:Key="TopGradientSelectColor">#FFFFFFFF</Color>
    <Color x:Key="BottomGradientSelectColor">#FF737373</Color>
    <SolidColorBrush x:Key="ControlBackgroundBrush12" Color="#FF333333" />

    <LinearGradientBrush x:Key="SelectedBackgroundBrush11" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource TopGradientSelectColor}" Offset="0" />
        <GradientStop Color="{StaticResource BottomGradientSelectColor}" Offset="1" />
    </LinearGradientBrush>
    <Color x:Key="MainColor12">#FF595959</Color>
    <SolidColorBrush x:Key="NormalBrush12" Color="{StaticResource MainColor12}" />

    <Style d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="HoverOff">

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="FocussedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocussedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="true" Margin="1,1,1,1">
                        <Rectangle x:Name="Background" IsHitTestVisible="False" Opacity="0.25" Fill="{StaticResource NormalBrush12}" RadiusX="1" RadiusY="1"/>
                        <Rectangle x:Name="HoverRectangle" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource NormalBrush12}" RadiusX="1" RadiusY="1"/>
                        <Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource SelectedBackgroundBrush11}" RadiusX="1" RadiusY="1"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,2,0,2" x:Name="contentPresenter" />
                        <Rectangle x:Name="FocusVisualElement" Stroke="{StaticResource HoverShineBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocussedOff}" x:Name="FocussedOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocussedOn}" x:Name="FocussedOn_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">

                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}"/>
                            </Trigger.EnterActions>

                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>

                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource BlackColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>